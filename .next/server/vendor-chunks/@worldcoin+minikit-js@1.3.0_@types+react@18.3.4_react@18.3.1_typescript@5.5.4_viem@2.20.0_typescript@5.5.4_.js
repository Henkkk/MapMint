"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@worldcoin+minikit-js@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4_viem@2.20.0_typescript@5.5.4_";
exports.ids = ["vendor-chunks/@worldcoin+minikit-js@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4_viem@2.20.0_typescript@5.5.4_"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@worldcoin+minikit-js@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4_viem@2.20.0_typescript@5.5.4_/node_modules/@worldcoin/minikit-js/build/index.js":
/*!******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@worldcoin+minikit-js@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4_viem@2.20.0_typescript@5.5.4_/node_modules/@worldcoin/minikit-js/build/index.js ***!
  \******************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Command: () => (/* binding */ Command),\n/* harmony export */   MiniKit: () => (/* binding */ MiniKit),\n/* harmony export */   MiniKitInstallErrorCodes: () => (/* binding */ MiniKitInstallErrorCodes),\n/* harmony export */   MiniKitInstallErrorMessage: () => (/* binding */ MiniKitInstallErrorMessage),\n/* harmony export */   Network: () => (/* binding */ Network),\n/* harmony export */   PaymentErrorCodes: () => (/* binding */ PaymentErrorCodes),\n/* harmony export */   PaymentErrorMessage: () => (/* binding */ PaymentErrorMessage),\n/* harmony export */   PaymentValidationErrors: () => (/* binding */ PaymentValidationErrors),\n/* harmony export */   ResponseEvent: () => (/* binding */ ResponseEvent),\n/* harmony export */   SAFE_CONTRACT_ABI: () => (/* binding */ SAFE_CONTRACT_ABI),\n/* harmony export */   SendTransactionErrorCodes: () => (/* binding */ SendTransactionErrorCodes),\n/* harmony export */   SendTransactionErrorMessage: () => (/* binding */ SendTransactionErrorMessage),\n/* harmony export */   ShareContactsErrorCodes: () => (/* binding */ ShareContactsErrorCodes),\n/* harmony export */   ShareContactsErrorMessage: () => (/* binding */ ShareContactsErrorMessage),\n/* harmony export */   SignMessageErrorCodes: () => (/* binding */ SignMessageErrorCodes),\n/* harmony export */   SignMessageErrorMessage: () => (/* binding */ SignMessageErrorMessage),\n/* harmony export */   SignTypedDataErrorCodes: () => (/* binding */ SignTypedDataErrorCodes),\n/* harmony export */   SignTypedDataErrorMessage: () => (/* binding */ SignTypedDataErrorMessage),\n/* harmony export */   TokenDecimals: () => (/* binding */ TokenDecimals),\n/* harmony export */   Tokens: () => (/* binding */ Tokens),\n/* harmony export */   VerificationErrorCodes: () => (/* reexport safe */ _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes),\n/* harmony export */   VerificationErrorMessage: () => (/* binding */ VerificationErrorMessage),\n/* harmony export */   VerificationLevel: () => (/* reexport safe */ _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel),\n/* harmony export */   WalletAuthErrorCodes: () => (/* binding */ WalletAuthErrorCodes),\n/* harmony export */   WalletAuthErrorMessage: () => (/* binding */ WalletAuthErrorMessage),\n/* harmony export */   parseSiweMessage: () => (/* binding */ parseSiweMessage),\n/* harmony export */   tokenToDecimals: () => (/* binding */ tokenToDecimals),\n/* harmony export */   verifyCloudProof: () => (/* reexport safe */ _worldcoin_idkit_core_backend__WEBPACK_IMPORTED_MODULE_7__.verifyCloudProof),\n/* harmony export */   verifySiweMessage: () => (/* binding */ verifySiweMessage)\n/* harmony export */ });\n/* harmony import */ var _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @worldcoin/idkit-core */ \"(ssr)/./node_modules/.pnpm/@worldcoin+idkit-core@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4/node_modules/@worldcoin/idkit-core/build/index.js\");\n/* harmony import */ var _worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @worldcoin/idkit-core/hashing */ \"(ssr)/./node_modules/.pnpm/@worldcoin+idkit-core@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4/node_modules/@worldcoin/idkit-core/build/lib/hashing.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.20.0_typescript@5.5.4/node_modules/viem/_esm/clients/createPublicClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.20.0_typescript@5.5.4/node_modules/viem/_esm/clients/transports/http.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.20.0_typescript@5.5.4/node_modules/viem/_esm/utils/signature/hashMessage.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/.pnpm/viem@2.20.0_typescript@5.5.4/node_modules/viem/_esm/actions/getContract.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/.pnpm/viem@2.20.0_typescript@5.5.4/node_modules/viem/_esm/chains/definitions/optimism.js\");\n/* harmony import */ var _worldcoin_idkit_core_backend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @worldcoin/idkit-core/backend */ \"(ssr)/./node_modules/.pnpm/@worldcoin+idkit-core@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4/node_modules/@worldcoin/idkit-core/build/lib/backend.js\");\n// helpers/send-webview-event.ts\nvar sendWebviewEvent = (payload) => {\n  if (window.webkit) {\n    window.webkit?.messageHandlers?.minikit?.postMessage?.(payload);\n  } else if (window.Android) {\n    window.Android.postMessage?.(JSON.stringify(payload));\n  }\n};\n\n// types/commands.ts\nvar Command = /* @__PURE__ */ ((Command2) => {\n  Command2[\"Verify\"] = \"verify\";\n  Command2[\"Pay\"] = \"pay\";\n  Command2[\"WalletAuth\"] = \"wallet-auth\";\n  Command2[\"SendTransaction\"] = \"send-transaction\";\n  Command2[\"SignMessage\"] = \"sign-message\";\n  Command2[\"SignTypedData\"] = \"sign-typed-data\";\n  Command2[\"ShareContacts\"] = \"share-contacts\";\n  return Command2;\n})(Command || {});\n\n// types/responses.ts\nvar ResponseEvent = /* @__PURE__ */ ((ResponseEvent2) => {\n  ResponseEvent2[\"MiniAppVerifyAction\"] = \"miniapp-verify-action\";\n  ResponseEvent2[\"MiniAppPayment\"] = \"miniapp-payment\";\n  ResponseEvent2[\"MiniAppWalletAuth\"] = \"miniapp-wallet-auth\";\n  ResponseEvent2[\"MiniAppSendTransaction\"] = \"miniapp-send-transaction\";\n  ResponseEvent2[\"MiniAppSignMessage\"] = \"miniapp-sign-message\";\n  ResponseEvent2[\"MiniAppSignTypedData\"] = \"miniapp-sign-typed-data\";\n  ResponseEvent2[\"MiniAppShareContacts\"] = \"miniapp-share-contacts\";\n  return ResponseEvent2;\n})(ResponseEvent || {});\n\n// types/payment.ts\nvar Tokens = /* @__PURE__ */ ((Tokens2) => {\n  Tokens2[\"USDCE\"] = \"USDCE\";\n  Tokens2[\"WLD\"] = \"WLD\";\n  return Tokens2;\n})(Tokens || {});\nvar TokenDecimals = {\n  [\"USDCE\" /* USDCE */]: 6,\n  [\"WLD\" /* WLD */]: 18\n};\nvar Network = /* @__PURE__ */ ((Network2) => {\n  Network2[\"Optimism\"] = \"optimism\";\n  Network2[\"WorldChain\"] = \"worldchain\";\n  return Network2;\n})(Network || {});\n\n// types/errors.ts\n\n\nvar VerificationErrorMessage = {\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.VerificationRejected]: \"You\\u2019ve cancelled the request in World App.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.MaxVerificationsReached]: \"You have already verified the maximum number of times for this action.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.CredentialUnavailable]: \"It seems you do not have the verification level required by this app.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.MalformedRequest]: \"There was a problem with this request. Please try again or contact the app owner.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InvalidNetwork]: \"Invalid network. If you are the app owner, visit docs.worldcoin.org/test for details.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InclusionProofFailed]: \"There was an issue fetching your credential. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InclusionProofPending]: \"Your identity is still being registered. Please wait a few minutes and try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.UnexpectedResponse]: \"Unexpected response from your wallet. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.FailedByHostApp]: \"Verification failed by the app. Please contact the app owner for details.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.GenericError]: \"Something unexpected went wrong. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.ConnectionFailed]: \"Connection to your wallet failed. Please try again.\"\n};\nvar PaymentErrorCodes = /* @__PURE__ */ ((PaymentErrorCodes2) => {\n  PaymentErrorCodes2[\"InputError\"] = \"input_error\";\n  PaymentErrorCodes2[\"PaymentRejected\"] = \"payment_rejected\";\n  PaymentErrorCodes2[\"InvalidReceiver\"] = \"invalid_receiver\";\n  PaymentErrorCodes2[\"InsufficientBalance\"] = \"insufficient_balance\";\n  PaymentErrorCodes2[\"TransactionFailed\"] = \"transaction_failed\";\n  PaymentErrorCodes2[\"GenericError\"] = \"generic_error\";\n  PaymentErrorCodes2[\"UserBlocked\"] = \"user_blocked\";\n  return PaymentErrorCodes2;\n})(PaymentErrorCodes || {});\nvar PaymentErrorMessage = {\n  [\"input_error\" /* InputError */]: \"There was a problem with this request. Please try again or contact the app owner.\",\n  [\"payment_rejected\" /* PaymentRejected */]: \"You\\u2019ve cancelled the payment in World App.\",\n  [\"invalid_receiver\" /* InvalidReceiver */]: \"The receiver address is invalid. Please contact the app owner.\",\n  [\"insufficient_balance\" /* InsufficientBalance */]: \"You do not have enough balance to complete this transaction.\",\n  [\"transaction_failed\" /* TransactionFailed */]: \"The transaction failed. Please try again.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"user_blocked\" /* UserBlocked */]: \"User's region is blocked from making payments.\"\n};\nvar PaymentValidationErrors = /* @__PURE__ */ ((PaymentValidationErrors2) => {\n  PaymentValidationErrors2[\"MalformedRequest\"] = \"There was a problem with this request. Please try again or contact the app owner.\";\n  PaymentValidationErrors2[\"InvalidTokenAddress\"] = \"The token address is invalid. Please contact the app owner.\";\n  PaymentValidationErrors2[\"InvalidAppId\"] = \"The app ID is invalid. Please contact the app owner.\";\n  PaymentValidationErrors2[\"DuplicateReference\"] = \"This reference ID already exists please generate a new one and try again.\";\n  return PaymentValidationErrors2;\n})(PaymentValidationErrors || {});\nvar WalletAuthErrorCodes = /* @__PURE__ */ ((WalletAuthErrorCodes2) => {\n  WalletAuthErrorCodes2[\"MalformedRequest\"] = \"malformed_request\";\n  WalletAuthErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  WalletAuthErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return WalletAuthErrorCodes2;\n})(WalletAuthErrorCodes || {});\nvar WalletAuthErrorMessage = {\n  [\"malformed_request\" /* MalformedRequest */]: \"Provided parameters in the request are invalid.\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar SendTransactionErrorCodes = /* @__PURE__ */ ((SendTransactionErrorCodes2) => {\n  SendTransactionErrorCodes2[\"InvalidOperation\"] = \"invalid_operation\";\n  SendTransactionErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SendTransactionErrorCodes2[\"InputError\"] = \"input_error\";\n  SendTransactionErrorCodes2[\"SimulationFailed\"] = \"simulation_failed\";\n  SendTransactionErrorCodes2[\"TransactionFailed\"] = \"transaction_failed\";\n  SendTransactionErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SendTransactionErrorCodes2[\"DisallowedOperation\"] = \"disallowed_operation\";\n  SendTransactionErrorCodes2[\"InvalidContract\"] = \"invalid_contract\";\n  SendTransactionErrorCodes2[\"MaliciousOperation\"] = \"malicious_operation\";\n  return SendTransactionErrorCodes2;\n})(SendTransactionErrorCodes || {});\nvar SendTransactionErrorMessage = {\n  [\"invalid_operation\" /* InvalidOperation */]: \"Transaction included an operation that was invalid\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"input_error\" /* InputError */]: \"Invalid payload.\",\n  [\"simulation_failed\" /* SimulationFailed */]: \"The transaction simulation failed.\",\n  [\"transaction_failed\" /* TransactionFailed */]: \"The transaction failed. Please try again later.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"disallowed_operation\" /* DisallowedOperation */]: \"The operation requested is not allowed. Please refer to the docs.\",\n  [\"invalid_contract\" /* InvalidContract */]: \"The contract address is not allowed for your application. Please check your developer portal configurations\",\n  [\"malicious_operation\" /* MaliciousOperation */]: \"The operation requested is considered malicious.\"\n};\nvar SignMessageErrorCodes = /* @__PURE__ */ ((SignMessageErrorCodes2) => {\n  SignMessageErrorCodes2[\"InvalidMessage\"] = \"invalid_message\";\n  SignMessageErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SignMessageErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return SignMessageErrorCodes2;\n})(SignMessageErrorCodes || {});\nvar SignMessageErrorMessage = {\n  [\"invalid_message\" /* InvalidMessage */]: \"Invalid message requested\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar SignTypedDataErrorCodes = /* @__PURE__ */ ((SignTypedDataErrorCodes2) => {\n  SignTypedDataErrorCodes2[\"InvalidOperation\"] = \"invalid_operation\";\n  SignTypedDataErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SignTypedDataErrorCodes2[\"InputError\"] = \"input_error\";\n  SignTypedDataErrorCodes2[\"SimulationFailed\"] = \"simulation_failed\";\n  SignTypedDataErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SignTypedDataErrorCodes2[\"DisallowedOperation\"] = \"disallowed_operation\";\n  SignTypedDataErrorCodes2[\"InvalidContract\"] = \"invalid_contract\";\n  SignTypedDataErrorCodes2[\"MaliciousOperation\"] = \"malicious_operation\";\n  return SignTypedDataErrorCodes2;\n})(SignTypedDataErrorCodes || {});\nvar SignTypedDataErrorMessage = SendTransactionErrorMessage;\nvar MiniKitInstallErrorCodes = /* @__PURE__ */ ((MiniKitInstallErrorCodes2) => {\n  MiniKitInstallErrorCodes2[\"Unknown\"] = \"unknown\";\n  MiniKitInstallErrorCodes2[\"AlreadyInstalled\"] = \"already_installed\";\n  MiniKitInstallErrorCodes2[\"OutsideOfWorldApp\"] = \"outside_of_worldapp\";\n  MiniKitInstallErrorCodes2[\"NotOnClient\"] = \"not_on_client\";\n  MiniKitInstallErrorCodes2[\"AppOutOfDate\"] = \"app_out_of_date\";\n  return MiniKitInstallErrorCodes2;\n})(MiniKitInstallErrorCodes || {});\nvar MiniKitInstallErrorMessage = {\n  [\"unknown\" /* Unknown */]: \"Failed to install MiniKit.\",\n  [\"already_installed\" /* AlreadyInstalled */]: \"MiniKit is already installed.\",\n  [\"outside_of_worldapp\" /* OutsideOfWorldApp */]: \"MiniApp launched outside of WorldApp.\",\n  [\"not_on_client\" /* NotOnClient */]: \"Window object is not available.\",\n  [\"app_out_of_date\" /* AppOutOfDate */]: \"WorldApp is out of date. Please update the app.\"\n};\nvar ShareContactsErrorCodes = /* @__PURE__ */ ((ShareContactsErrorCodes2) => {\n  ShareContactsErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  ShareContactsErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return ShareContactsErrorCodes2;\n})(ShareContactsErrorCodes || {});\nvar ShareContactsErrorMessage = {\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\n\n// minikit.ts\n\n\n\n// helpers/siwe/validate-wallet-auth-command-input.ts\nvar validateWalletAuthCommandInput = (params) => {\n  if (!params.nonce) {\n    return { valid: false, message: \"'nonce' is required\" };\n  }\n  if (params.nonce.length < 8) {\n    return { valid: false, message: \"'nonce' must be at least 8 characters\" };\n  }\n  if (params.statement && params.statement.includes(\"\\n\")) {\n    return { valid: false, message: \"'statement' must not contain newlines\" };\n  }\n  if (params.expirationTime && new Date(params.expirationTime) < /* @__PURE__ */ new Date()) {\n    return { valid: false, message: \"'expirationTime' must be in the future\" };\n  }\n  if (params.expirationTime && new Date(params.expirationTime) > new Date(Date.now() + 7 * 24 * 60 * 60 * 1e3)) {\n    return { valid: false, message: \"'expirationTime' must be within 7 days\" };\n  }\n  if (params.notBefore && new Date(params.notBefore) > new Date(Date.now() + 7 * 24 * 60 * 60 * 1e3)) {\n    return { valid: false, message: \"'notBefore' must be within 7 days\" };\n  }\n  return { valid: true };\n};\n\n// helpers/siwe/siwe.ts\n\n\nvar PREAMBLE = \" wants you to sign in with your Ethereum account:\";\nvar URI_TAG = \"URI: \";\nvar VERSION_TAG = \"Version: \";\nvar CHAIN_TAG = \"Chain ID: \";\nvar NONCE_TAG = \"Nonce: \";\nvar IAT_TAG = \"Issued At: \";\nvar EXP_TAG = \"Expiration Time: \";\nvar NBF_TAG = \"Not Before: \";\nvar RID_TAG = \"Request ID: \";\nvar ERC_191_PREFIX = \"\u0019Ethereum Signed Message:\\n\";\nvar tagged = (line, tag) => {\n  if (line && line.includes(tag)) {\n    return line.replace(tag, \"\");\n  } else {\n    throw new Error(`Missing '${tag}'`);\n  }\n};\nvar parseSiweMessage = (inputString) => {\n  const lines = inputString.split(\"\\n\")[Symbol.iterator]();\n  const domain = tagged(lines.next()?.value, PREAMBLE);\n  const address = lines.next()?.value;\n  lines.next();\n  const nextValue = lines.next()?.value;\n  let statement;\n  if (nextValue) {\n    statement = nextValue;\n    lines.next();\n  }\n  const uri = tagged(lines.next()?.value, URI_TAG);\n  const version = tagged(lines.next()?.value, VERSION_TAG);\n  const chain_id = tagged(lines.next()?.value, CHAIN_TAG);\n  const nonce = tagged(lines.next()?.value, NONCE_TAG);\n  const issued_at = tagged(lines.next()?.value, IAT_TAG);\n  let expiration_time, not_before, request_id;\n  for (let line of lines) {\n    if (line.startsWith(EXP_TAG)) {\n      expiration_time = tagged(line, EXP_TAG);\n    } else if (line.startsWith(NBF_TAG)) {\n      not_before = tagged(line, NBF_TAG);\n    } else if (line.startsWith(RID_TAG)) {\n      request_id = tagged(line, RID_TAG);\n    }\n  }\n  if (lines.next().done === false) {\n    throw new Error(\"Extra lines in the input\");\n  }\n  const siweMessageData = {\n    domain,\n    address,\n    statement,\n    uri,\n    version,\n    chain_id,\n    nonce,\n    issued_at,\n    expiration_time,\n    not_before,\n    request_id\n  };\n  return siweMessageData;\n};\nvar generateSiweMessage = (siweMessageData) => {\n  let siweMessage = \"\";\n  if (siweMessageData.scheme) {\n    siweMessage += `${siweMessageData.scheme}://${siweMessageData.domain} wants you to sign in with your Ethereum account:\n`;\n  } else {\n    siweMessage += `${siweMessageData.domain} wants you to sign in with your Ethereum account:\n`;\n  }\n  if (siweMessageData.address) {\n    siweMessage += `${siweMessageData.address}\n`;\n  } else {\n    siweMessage += \"{address}\\n\";\n  }\n  siweMessage += \"\\n\";\n  if (siweMessageData.statement) {\n    siweMessage += `${siweMessageData.statement}\n`;\n  }\n  siweMessage += \"\\n\";\n  siweMessage += `URI: ${siweMessageData.uri}\n`;\n  siweMessage += `Version: ${siweMessageData.version}\n`;\n  siweMessage += `Chain ID: ${siweMessageData.chain_id}\n`;\n  siweMessage += `Nonce: ${siweMessageData.nonce}\n`;\n  siweMessage += `Issued At: ${siweMessageData.issued_at}\n`;\n  if (siweMessageData.expiration_time) {\n    siweMessage += `Expiration Time: ${siweMessageData.expiration_time}\n`;\n  }\n  if (siweMessageData.not_before) {\n    siweMessage += `Not Before: ${siweMessageData.not_before}\n`;\n  }\n  if (siweMessageData.request_id) {\n    siweMessage += `Request ID: ${siweMessageData.request_id}\n`;\n  }\n  return siweMessage;\n};\nvar SAFE_CONTRACT_ABI = [\n  {\n    name: \"checkSignatures\",\n    type: \"function\",\n    stateMutability: \"view\",\n    inputs: [\n      { name: \"dataHash\", type: \"bytes32\" },\n      { name: \"data\", type: \"bytes\" },\n      { name: \"signature\", type: \"bytes\" }\n    ],\n    outputs: []\n  }\n];\nvar verifySiweMessage = async (payload, nonce, statement, requestId, userProvider) => {\n  if (typeof window !== \"undefined\") {\n    throw new Error(\"Verify can only be called in the backend\");\n  }\n  const { message, signature, address } = payload;\n  const siweMessageData = parseSiweMessage(message);\n  if (siweMessageData.expiration_time) {\n    const expirationTime = new Date(siweMessageData.expiration_time);\n    if (expirationTime < /* @__PURE__ */ new Date()) {\n      throw new Error(\"Expired message\");\n    }\n  }\n  if (siweMessageData.not_before) {\n    const notBefore = new Date(siweMessageData.not_before);\n    if (notBefore > /* @__PURE__ */ new Date()) {\n      throw new Error(\"Not Before time has not passed\");\n    }\n  }\n  if (nonce && siweMessageData.nonce !== nonce) {\n    throw new Error(\n      `Nonce mismatch. Got: ${siweMessageData.nonce}, Expected: ${nonce}`\n    );\n  }\n  if (statement && siweMessageData.statement !== statement) {\n    throw new Error(\n      `Statement mismatch. Got: ${siweMessageData.statement}, Expected: ${statement}`\n    );\n  }\n  if (requestId && siweMessageData.request_id !== requestId) {\n    throw new Error(\n      `Request ID mismatch. Got: ${siweMessageData.request_id}, Expected: ${requestId}`\n    );\n  }\n  let provider = userProvider || (0,viem__WEBPACK_IMPORTED_MODULE_2__.createPublicClient)({ chain: viem_chains__WEBPACK_IMPORTED_MODULE_3__.optimism, transport: (0,viem__WEBPACK_IMPORTED_MODULE_4__.http)() });\n  const signedMessage = `${ERC_191_PREFIX}${message.length}${message}`;\n  const messageBytes = Buffer.from(signedMessage, \"utf8\").toString(\"hex\");\n  const hashedMessage = (0,viem__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(signedMessage);\n  const contract = (0,viem__WEBPACK_IMPORTED_MODULE_6__.getContract)({\n    address,\n    abi: SAFE_CONTRACT_ABI,\n    client: provider\n  });\n  try {\n    await contract.read.checkSignatures([\n      hashedMessage,\n      `0x${messageBytes}`,\n      `0x${signature}`\n    ]);\n  } catch (error) {\n    throw new Error(\"Signature verification failed\");\n  }\n  return { isValid: true, siweMessageData };\n};\n\n// helpers/payment/client.ts\nvar tokenToDecimals = (amount, token) => {\n  const decimals = TokenDecimals[token];\n  if (decimals === void 0) {\n    throw new Error(`Invalid token: ${token}`);\n  }\n  const factor = 10 ** decimals;\n  const result = amount * factor;\n  if (!Number.isInteger(result)) {\n    throw new Error(`The resulting amount is not a whole number: ${result}`);\n  }\n  return result;\n};\nvar validatePaymentPayload = (payload) => {\n  if (payload.tokens.some(\n    (token) => token.symbol == \"USDCE\" && parseFloat(token.token_amount) < 0.1\n  )) {\n    console.error(\"USDCE amount should be greater than $0.1\");\n    return false;\n  }\n  if (payload.reference.length > 36) {\n    console.error(\"Reference must not exceed 36 characters\");\n    return false;\n  }\n  return true;\n};\n\n// helpers/usernames/index.ts\nvar getUserProfile = async (address) => {\n  const res = await fetch(\"https://usernames.worldcoin.org/api/v1/query\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      addresses: [address]\n    })\n  });\n  const usernames = await res.json();\n  return usernames[0] ?? { username: null, profilePictureUrl: null };\n};\n\n// minikit.ts\nvar sendMiniKitEvent = (payload) => {\n  sendWebviewEvent(payload);\n};\nvar _MiniKit = class _MiniKit {\n  static sendInit() {\n    sendWebviewEvent({\n      command: \"init\",\n      payload: { version: this.MINIKIT_VERSION }\n    });\n  }\n  static subscribe(event, handler) {\n    if (event === \"miniapp-wallet-auth\" /* MiniAppWalletAuth */) {\n      const originalHandler = handler;\n      const wrappedHandler = (payload) => {\n        if (payload.status === \"success\") {\n          _MiniKit.walletAddress = payload.address;\n          getUserProfile(payload.address).then((queryResponse) => {\n            _MiniKit.user = {\n              username: queryResponse.username,\n              profilePictureUrl: queryResponse.profilePictureUrl,\n              walletAddress: payload.address\n            };\n          });\n        }\n        originalHandler(payload);\n      };\n      this.listeners[event] = wrappedHandler;\n    } else {\n      this.listeners[event] = handler;\n    }\n  }\n  static unsubscribe(event) {\n    delete this.listeners[event];\n  }\n  static trigger(event, payload) {\n    if (!this.listeners[event]) {\n      console.error(`No handler for event ${event}`);\n      return;\n    }\n    this.listeners[event](payload);\n  }\n  static async awaitCommand(event, command, executor) {\n    return new Promise((resolve) => {\n      let commandPayload = null;\n      const handleAndUnsubscribe = (payload) => {\n        this.unsubscribe(event);\n        resolve({ commandPayload, finalPayload: payload });\n      };\n      this.subscribe(event, handleAndUnsubscribe);\n      commandPayload = executor();\n    });\n  }\n  static commandsValid(input) {\n    return Object.entries(this.commandVersion).every(\n      ([commandName, version]) => {\n        const commandInput = input.find(\n          (command) => command.name === commandName\n        );\n        if (!commandInput) {\n          console.error(\n            `Command ${commandName} is not supported by the app. Try updating the app version`\n          );\n        } else {\n          _MiniKit.isCommandAvailable[commandName] = true;\n        }\n        return commandInput ? commandInput.supported_versions.includes(version) : false;\n      }\n    );\n  }\n  static install(appId) {\n    if (typeof window === \"undefined\" || Boolean(window.MiniKit)) {\n      return {\n        success: false,\n        errorCode: \"already_installed\" /* AlreadyInstalled */,\n        errorMessage: MiniKitInstallErrorMessage[\"already_installed\" /* AlreadyInstalled */]\n      };\n    }\n    if (!appId) {\n      console.warn(\"App ID not provided during install\");\n    } else {\n      _MiniKit.appId = appId;\n    }\n    if (!window.WorldApp) {\n      return {\n        success: false,\n        errorCode: \"outside_of_worldapp\" /* OutsideOfWorldApp */,\n        errorMessage: MiniKitInstallErrorMessage[\"outside_of_worldapp\" /* OutsideOfWorldApp */]\n      };\n    }\n    try {\n      window.MiniKit = _MiniKit;\n      this.sendInit();\n    } catch (error) {\n      console.error(\n        MiniKitInstallErrorMessage[\"unknown\" /* Unknown */],\n        error\n      );\n      return {\n        success: false,\n        errorCode: \"unknown\" /* Unknown */,\n        errorMessage: MiniKitInstallErrorMessage[\"unknown\" /* Unknown */]\n      };\n    }\n    if (!this.commandsValid(window.WorldApp.supported_commands)) {\n      return {\n        success: false,\n        errorCode: \"app_out_of_date\" /* AppOutOfDate */,\n        errorMessage: MiniKitInstallErrorMessage[\"app_out_of_date\" /* AppOutOfDate */]\n      };\n    }\n    return { success: true };\n  }\n  static isInstalled(debug) {\n    if (debug) console.log(\"MiniKit is alive!\");\n    const isInstalled = Boolean(window.MiniKit);\n    if (!isInstalled)\n      console.error(\n        \"MiniKit is not installed. Make sure you're running the application inside of World App\"\n      );\n    return isInstalled;\n  }\n};\n_MiniKit.MINIKIT_VERSION = 1;\n_MiniKit.commandVersion = {\n  [\"verify\" /* Verify */]: 1,\n  [\"pay\" /* Pay */]: 1,\n  [\"wallet-auth\" /* WalletAuth */]: 1,\n  [\"send-transaction\" /* SendTransaction */]: 1,\n  [\"sign-message\" /* SignMessage */]: 1,\n  [\"sign-typed-data\" /* SignTypedData */]: 1,\n  [\"share-contacts\" /* ShareContacts */]: 1\n};\n_MiniKit.isCommandAvailable = {\n  [\"verify\" /* Verify */]: false,\n  [\"pay\" /* Pay */]: false,\n  [\"wallet-auth\" /* WalletAuth */]: false,\n  [\"send-transaction\" /* SendTransaction */]: false,\n  [\"sign-message\" /* SignMessage */]: false,\n  [\"sign-typed-data\" /* SignTypedData */]: false,\n  [\"share-contacts\" /* ShareContacts */]: false\n};\n_MiniKit.listeners = {\n  [\"miniapp-verify-action\" /* MiniAppVerifyAction */]: () => {\n  },\n  [\"miniapp-payment\" /* MiniAppPayment */]: () => {\n  },\n  [\"miniapp-wallet-auth\" /* MiniAppWalletAuth */]: () => {\n  },\n  [\"miniapp-send-transaction\" /* MiniAppSendTransaction */]: () => {\n  },\n  [\"miniapp-sign-message\" /* MiniAppSignMessage */]: () => {\n  },\n  [\"miniapp-sign-typed-data\" /* MiniAppSignTypedData */]: () => {\n  },\n  [\"miniapp-share-contacts\" /* MiniAppShareContacts */]: () => {\n  }\n};\n_MiniKit.appId = null;\n_MiniKit.walletAddress = null;\n_MiniKit.user = null;\n_MiniKit.commands = {\n  verify: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"verify\" /* Verify */]) {\n      console.error(\n        \"'verify' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    const timestamp = (/* @__PURE__ */ new Date()).toISOString();\n    const eventPayload = {\n      action: (0,_worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_1__.encodeAction)(payload.action),\n      signal: (0,_worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_1__.generateSignal)(payload.signal).digest,\n      verification_level: payload.verification_level || _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel.Orb,\n      timestamp\n    };\n    sendMiniKitEvent({\n      command: \"verify\" /* Verify */,\n      version: _MiniKit.commandVersion[\"verify\" /* Verify */],\n      payload: eventPayload\n    });\n    return eventPayload;\n  },\n  pay: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"pay\" /* Pay */]) {\n      console.error(\n        \"'pay' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    if (!validatePaymentPayload(payload)) {\n      return null;\n    }\n    const network = \"worldchain\" /* WorldChain */;\n    const eventPayload = {\n      ...payload,\n      network\n    };\n    sendMiniKitEvent({\n      command: \"pay\" /* Pay */,\n      version: _MiniKit.commandVersion[\"pay\" /* Pay */],\n      payload: eventPayload\n    });\n    return eventPayload;\n  },\n  walletAuth: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"wallet-auth\" /* WalletAuth */]) {\n      console.error(\n        \"'walletAuth' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    const validationResult = validateWalletAuthCommandInput(payload);\n    if (!validationResult.valid) {\n      console.error(\n        \"Failed to validate wallet auth input:\\n\\n -->\",\n        validationResult.message\n      );\n      return null;\n    }\n    let protocol = null;\n    try {\n      const currentUrl = new URL(window.location.href);\n      protocol = currentUrl.protocol.split(\":\")[0];\n    } catch (error) {\n      console.error(\"Failed to get current URL\", error);\n      return null;\n    }\n    const siweMessage = generateSiweMessage({\n      scheme: protocol,\n      domain: window.location.host,\n      statement: payload.statement ?? void 0,\n      uri: window.location.href,\n      version: 1,\n      chain_id: 10,\n      nonce: payload.nonce,\n      issued_at: (/* @__PURE__ */ new Date()).toISOString(),\n      expiration_time: payload.expirationTime?.toISOString() ?? void 0,\n      not_before: payload.notBefore?.toISOString() ?? void 0,\n      request_id: payload.requestId ?? void 0\n    });\n    const walletAuthPayload = { siweMessage };\n    sendMiniKitEvent({\n      command: \"wallet-auth\" /* WalletAuth */,\n      version: _MiniKit.commandVersion[\"wallet-auth\" /* WalletAuth */],\n      payload: walletAuthPayload\n    });\n    return walletAuthPayload;\n  },\n  sendTransaction: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"send-transaction\" /* SendTransaction */]) {\n      console.error(\n        \"'sendTransaction' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"send-transaction\" /* SendTransaction */,\n      version: 1,\n      payload\n    });\n    return payload;\n  },\n  signMessage: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-message\" /* SignMessage */]) {\n      console.error(\n        \"'signMessage' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"sign-message\" /* SignMessage */,\n      version: 1,\n      payload\n    });\n    return payload;\n  },\n  signTypedData: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-typed-data\" /* SignTypedData */]) {\n      console.error(\n        \"'signTypedData' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"sign-typed-data\" /* SignTypedData */,\n      version: 1,\n      payload\n    });\n    return payload;\n  },\n  shareContacts: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-typed-data\" /* SignTypedData */]) {\n      console.error(\n        \"'shareContacts' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"share-contacts\" /* ShareContacts */,\n      version: 1,\n      payload\n    });\n    return payload;\n  }\n};\n/**\n * This object contains async versions of all the commands.\n * Instead of using event listeners, you can just `await` these.\n *\n * They return a standardized object\n *\n * commandPayload - object returned by the command function\n *\n * finalPayload - object returned by the event listener, or in other words, WorldApp response\n */\n_MiniKit.commandsAsync = {\n  verify: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-verify-action\" /* MiniAppVerifyAction */,\n          \"verify\" /* Verify */,\n          () => _MiniKit.commands.verify(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  pay: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-payment\" /* MiniAppPayment */,\n          \"pay\" /* Pay */,\n          () => _MiniKit.commands.pay(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  walletAuth: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-wallet-auth\" /* MiniAppWalletAuth */,\n          \"wallet-auth\" /* WalletAuth */,\n          () => _MiniKit.commands.walletAuth(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  sendTransaction: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-send-transaction\" /* MiniAppSendTransaction */,\n          \"send-transaction\" /* SendTransaction */,\n          () => _MiniKit.commands.sendTransaction(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  signMessage: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-sign-message\" /* MiniAppSignMessage */,\n          \"sign-message\" /* SignMessage */,\n          () => _MiniKit.commands.signMessage(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  signTypedData: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-sign-typed-data\" /* MiniAppSignTypedData */,\n          \"sign-typed-data\" /* SignTypedData */,\n          () => _MiniKit.commands.signTypedData(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  shareContacts: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-share-contacts\" /* MiniAppShareContacts */,\n          \"share-contacts\" /* ShareContacts */,\n          () => _MiniKit.commands.shareContacts(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n};\nvar MiniKit = _MiniKit;\n\n// index.ts\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@worldcoin+minikit-js@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4_viem@2.20.0_typescript@5.5.4_/node_modules/@worldcoin/minikit-js/build/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@worldcoin+minikit-js@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4_viem@2.20.0_typescript@5.5.4_/node_modules/@worldcoin/minikit-js/build/index.js":
/*!******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@worldcoin+minikit-js@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4_viem@2.20.0_typescript@5.5.4_/node_modules/@worldcoin/minikit-js/build/index.js ***!
  \******************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Command: () => (/* binding */ Command),\n/* harmony export */   MiniKit: () => (/* binding */ MiniKit),\n/* harmony export */   MiniKitInstallErrorCodes: () => (/* binding */ MiniKitInstallErrorCodes),\n/* harmony export */   MiniKitInstallErrorMessage: () => (/* binding */ MiniKitInstallErrorMessage),\n/* harmony export */   Network: () => (/* binding */ Network),\n/* harmony export */   PaymentErrorCodes: () => (/* binding */ PaymentErrorCodes),\n/* harmony export */   PaymentErrorMessage: () => (/* binding */ PaymentErrorMessage),\n/* harmony export */   PaymentValidationErrors: () => (/* binding */ PaymentValidationErrors),\n/* harmony export */   ResponseEvent: () => (/* binding */ ResponseEvent),\n/* harmony export */   SAFE_CONTRACT_ABI: () => (/* binding */ SAFE_CONTRACT_ABI),\n/* harmony export */   SendTransactionErrorCodes: () => (/* binding */ SendTransactionErrorCodes),\n/* harmony export */   SendTransactionErrorMessage: () => (/* binding */ SendTransactionErrorMessage),\n/* harmony export */   ShareContactsErrorCodes: () => (/* binding */ ShareContactsErrorCodes),\n/* harmony export */   ShareContactsErrorMessage: () => (/* binding */ ShareContactsErrorMessage),\n/* harmony export */   SignMessageErrorCodes: () => (/* binding */ SignMessageErrorCodes),\n/* harmony export */   SignMessageErrorMessage: () => (/* binding */ SignMessageErrorMessage),\n/* harmony export */   SignTypedDataErrorCodes: () => (/* binding */ SignTypedDataErrorCodes),\n/* harmony export */   SignTypedDataErrorMessage: () => (/* binding */ SignTypedDataErrorMessage),\n/* harmony export */   TokenDecimals: () => (/* binding */ TokenDecimals),\n/* harmony export */   Tokens: () => (/* binding */ Tokens),\n/* harmony export */   VerificationErrorCodes: () => (/* reexport safe */ _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes),\n/* harmony export */   VerificationErrorMessage: () => (/* binding */ VerificationErrorMessage),\n/* harmony export */   VerificationLevel: () => (/* reexport safe */ _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel),\n/* harmony export */   WalletAuthErrorCodes: () => (/* binding */ WalletAuthErrorCodes),\n/* harmony export */   WalletAuthErrorMessage: () => (/* binding */ WalletAuthErrorMessage),\n/* harmony export */   parseSiweMessage: () => (/* binding */ parseSiweMessage),\n/* harmony export */   tokenToDecimals: () => (/* binding */ tokenToDecimals),\n/* harmony export */   verifyCloudProof: () => (/* reexport safe */ _worldcoin_idkit_core_backend__WEBPACK_IMPORTED_MODULE_7__.verifyCloudProof),\n/* harmony export */   verifySiweMessage: () => (/* binding */ verifySiweMessage)\n/* harmony export */ });\n/* harmony import */ var _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @worldcoin/idkit-core */ \"(rsc)/./node_modules/.pnpm/@worldcoin+idkit-core@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4/node_modules/@worldcoin/idkit-core/build/index.js\");\n/* harmony import */ var _worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @worldcoin/idkit-core/hashing */ \"(rsc)/./node_modules/.pnpm/@worldcoin+idkit-core@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4/node_modules/@worldcoin/idkit-core/build/lib/hashing.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(rsc)/./node_modules/.pnpm/viem@2.20.0_typescript@5.5.4/node_modules/viem/_esm/clients/createPublicClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem */ \"(rsc)/./node_modules/.pnpm/viem@2.20.0_typescript@5.5.4/node_modules/viem/_esm/clients/transports/http.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(rsc)/./node_modules/.pnpm/viem@2.20.0_typescript@5.5.4/node_modules/viem/_esm/utils/signature/hashMessage.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(rsc)/./node_modules/.pnpm/viem@2.20.0_typescript@5.5.4/node_modules/viem/_esm/actions/getContract.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem/chains */ \"(rsc)/./node_modules/.pnpm/viem@2.20.0_typescript@5.5.4/node_modules/viem/_esm/chains/definitions/optimism.js\");\n/* harmony import */ var _worldcoin_idkit_core_backend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @worldcoin/idkit-core/backend */ \"(rsc)/./node_modules/.pnpm/@worldcoin+idkit-core@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4/node_modules/@worldcoin/idkit-core/build/lib/backend.js\");\n// helpers/send-webview-event.ts\nvar sendWebviewEvent = (payload) => {\n  if (window.webkit) {\n    window.webkit?.messageHandlers?.minikit?.postMessage?.(payload);\n  } else if (window.Android) {\n    window.Android.postMessage?.(JSON.stringify(payload));\n  }\n};\n\n// types/commands.ts\nvar Command = /* @__PURE__ */ ((Command2) => {\n  Command2[\"Verify\"] = \"verify\";\n  Command2[\"Pay\"] = \"pay\";\n  Command2[\"WalletAuth\"] = \"wallet-auth\";\n  Command2[\"SendTransaction\"] = \"send-transaction\";\n  Command2[\"SignMessage\"] = \"sign-message\";\n  Command2[\"SignTypedData\"] = \"sign-typed-data\";\n  Command2[\"ShareContacts\"] = \"share-contacts\";\n  return Command2;\n})(Command || {});\n\n// types/responses.ts\nvar ResponseEvent = /* @__PURE__ */ ((ResponseEvent2) => {\n  ResponseEvent2[\"MiniAppVerifyAction\"] = \"miniapp-verify-action\";\n  ResponseEvent2[\"MiniAppPayment\"] = \"miniapp-payment\";\n  ResponseEvent2[\"MiniAppWalletAuth\"] = \"miniapp-wallet-auth\";\n  ResponseEvent2[\"MiniAppSendTransaction\"] = \"miniapp-send-transaction\";\n  ResponseEvent2[\"MiniAppSignMessage\"] = \"miniapp-sign-message\";\n  ResponseEvent2[\"MiniAppSignTypedData\"] = \"miniapp-sign-typed-data\";\n  ResponseEvent2[\"MiniAppShareContacts\"] = \"miniapp-share-contacts\";\n  return ResponseEvent2;\n})(ResponseEvent || {});\n\n// types/payment.ts\nvar Tokens = /* @__PURE__ */ ((Tokens2) => {\n  Tokens2[\"USDCE\"] = \"USDCE\";\n  Tokens2[\"WLD\"] = \"WLD\";\n  return Tokens2;\n})(Tokens || {});\nvar TokenDecimals = {\n  [\"USDCE\" /* USDCE */]: 6,\n  [\"WLD\" /* WLD */]: 18\n};\nvar Network = /* @__PURE__ */ ((Network2) => {\n  Network2[\"Optimism\"] = \"optimism\";\n  Network2[\"WorldChain\"] = \"worldchain\";\n  return Network2;\n})(Network || {});\n\n// types/errors.ts\n\n\nvar VerificationErrorMessage = {\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.VerificationRejected]: \"You\\u2019ve cancelled the request in World App.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.MaxVerificationsReached]: \"You have already verified the maximum number of times for this action.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.CredentialUnavailable]: \"It seems you do not have the verification level required by this app.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.MalformedRequest]: \"There was a problem with this request. Please try again or contact the app owner.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InvalidNetwork]: \"Invalid network. If you are the app owner, visit docs.worldcoin.org/test for details.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InclusionProofFailed]: \"There was an issue fetching your credential. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.InclusionProofPending]: \"Your identity is still being registered. Please wait a few minutes and try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.UnexpectedResponse]: \"Unexpected response from your wallet. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.FailedByHostApp]: \"Verification failed by the app. Please contact the app owner for details.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.GenericError]: \"Something unexpected went wrong. Please try again.\",\n  [_worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.AppErrorCodes.ConnectionFailed]: \"Connection to your wallet failed. Please try again.\"\n};\nvar PaymentErrorCodes = /* @__PURE__ */ ((PaymentErrorCodes2) => {\n  PaymentErrorCodes2[\"InputError\"] = \"input_error\";\n  PaymentErrorCodes2[\"PaymentRejected\"] = \"payment_rejected\";\n  PaymentErrorCodes2[\"InvalidReceiver\"] = \"invalid_receiver\";\n  PaymentErrorCodes2[\"InsufficientBalance\"] = \"insufficient_balance\";\n  PaymentErrorCodes2[\"TransactionFailed\"] = \"transaction_failed\";\n  PaymentErrorCodes2[\"GenericError\"] = \"generic_error\";\n  PaymentErrorCodes2[\"UserBlocked\"] = \"user_blocked\";\n  return PaymentErrorCodes2;\n})(PaymentErrorCodes || {});\nvar PaymentErrorMessage = {\n  [\"input_error\" /* InputError */]: \"There was a problem with this request. Please try again or contact the app owner.\",\n  [\"payment_rejected\" /* PaymentRejected */]: \"You\\u2019ve cancelled the payment in World App.\",\n  [\"invalid_receiver\" /* InvalidReceiver */]: \"The receiver address is invalid. Please contact the app owner.\",\n  [\"insufficient_balance\" /* InsufficientBalance */]: \"You do not have enough balance to complete this transaction.\",\n  [\"transaction_failed\" /* TransactionFailed */]: \"The transaction failed. Please try again.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"user_blocked\" /* UserBlocked */]: \"User's region is blocked from making payments.\"\n};\nvar PaymentValidationErrors = /* @__PURE__ */ ((PaymentValidationErrors2) => {\n  PaymentValidationErrors2[\"MalformedRequest\"] = \"There was a problem with this request. Please try again or contact the app owner.\";\n  PaymentValidationErrors2[\"InvalidTokenAddress\"] = \"The token address is invalid. Please contact the app owner.\";\n  PaymentValidationErrors2[\"InvalidAppId\"] = \"The app ID is invalid. Please contact the app owner.\";\n  PaymentValidationErrors2[\"DuplicateReference\"] = \"This reference ID already exists please generate a new one and try again.\";\n  return PaymentValidationErrors2;\n})(PaymentValidationErrors || {});\nvar WalletAuthErrorCodes = /* @__PURE__ */ ((WalletAuthErrorCodes2) => {\n  WalletAuthErrorCodes2[\"MalformedRequest\"] = \"malformed_request\";\n  WalletAuthErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  WalletAuthErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return WalletAuthErrorCodes2;\n})(WalletAuthErrorCodes || {});\nvar WalletAuthErrorMessage = {\n  [\"malformed_request\" /* MalformedRequest */]: \"Provided parameters in the request are invalid.\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar SendTransactionErrorCodes = /* @__PURE__ */ ((SendTransactionErrorCodes2) => {\n  SendTransactionErrorCodes2[\"InvalidOperation\"] = \"invalid_operation\";\n  SendTransactionErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SendTransactionErrorCodes2[\"InputError\"] = \"input_error\";\n  SendTransactionErrorCodes2[\"SimulationFailed\"] = \"simulation_failed\";\n  SendTransactionErrorCodes2[\"TransactionFailed\"] = \"transaction_failed\";\n  SendTransactionErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SendTransactionErrorCodes2[\"DisallowedOperation\"] = \"disallowed_operation\";\n  SendTransactionErrorCodes2[\"InvalidContract\"] = \"invalid_contract\";\n  SendTransactionErrorCodes2[\"MaliciousOperation\"] = \"malicious_operation\";\n  return SendTransactionErrorCodes2;\n})(SendTransactionErrorCodes || {});\nvar SendTransactionErrorMessage = {\n  [\"invalid_operation\" /* InvalidOperation */]: \"Transaction included an operation that was invalid\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"input_error\" /* InputError */]: \"Invalid payload.\",\n  [\"simulation_failed\" /* SimulationFailed */]: \"The transaction simulation failed.\",\n  [\"transaction_failed\" /* TransactionFailed */]: \"The transaction failed. Please try again later.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong. Please try again.\",\n  [\"disallowed_operation\" /* DisallowedOperation */]: \"The operation requested is not allowed. Please refer to the docs.\",\n  [\"invalid_contract\" /* InvalidContract */]: \"The contract address is not allowed for your application. Please check your developer portal configurations\",\n  [\"malicious_operation\" /* MaliciousOperation */]: \"The operation requested is considered malicious.\"\n};\nvar SignMessageErrorCodes = /* @__PURE__ */ ((SignMessageErrorCodes2) => {\n  SignMessageErrorCodes2[\"InvalidMessage\"] = \"invalid_message\";\n  SignMessageErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SignMessageErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return SignMessageErrorCodes2;\n})(SignMessageErrorCodes || {});\nvar SignMessageErrorMessage = {\n  [\"invalid_message\" /* InvalidMessage */]: \"Invalid message requested\",\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\nvar SignTypedDataErrorCodes = /* @__PURE__ */ ((SignTypedDataErrorCodes2) => {\n  SignTypedDataErrorCodes2[\"InvalidOperation\"] = \"invalid_operation\";\n  SignTypedDataErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  SignTypedDataErrorCodes2[\"InputError\"] = \"input_error\";\n  SignTypedDataErrorCodes2[\"SimulationFailed\"] = \"simulation_failed\";\n  SignTypedDataErrorCodes2[\"GenericError\"] = \"generic_error\";\n  SignTypedDataErrorCodes2[\"DisallowedOperation\"] = \"disallowed_operation\";\n  SignTypedDataErrorCodes2[\"InvalidContract\"] = \"invalid_contract\";\n  SignTypedDataErrorCodes2[\"MaliciousOperation\"] = \"malicious_operation\";\n  return SignTypedDataErrorCodes2;\n})(SignTypedDataErrorCodes || {});\nvar SignTypedDataErrorMessage = SendTransactionErrorMessage;\nvar MiniKitInstallErrorCodes = /* @__PURE__ */ ((MiniKitInstallErrorCodes2) => {\n  MiniKitInstallErrorCodes2[\"Unknown\"] = \"unknown\";\n  MiniKitInstallErrorCodes2[\"AlreadyInstalled\"] = \"already_installed\";\n  MiniKitInstallErrorCodes2[\"OutsideOfWorldApp\"] = \"outside_of_worldapp\";\n  MiniKitInstallErrorCodes2[\"NotOnClient\"] = \"not_on_client\";\n  MiniKitInstallErrorCodes2[\"AppOutOfDate\"] = \"app_out_of_date\";\n  return MiniKitInstallErrorCodes2;\n})(MiniKitInstallErrorCodes || {});\nvar MiniKitInstallErrorMessage = {\n  [\"unknown\" /* Unknown */]: \"Failed to install MiniKit.\",\n  [\"already_installed\" /* AlreadyInstalled */]: \"MiniKit is already installed.\",\n  [\"outside_of_worldapp\" /* OutsideOfWorldApp */]: \"MiniApp launched outside of WorldApp.\",\n  [\"not_on_client\" /* NotOnClient */]: \"Window object is not available.\",\n  [\"app_out_of_date\" /* AppOutOfDate */]: \"WorldApp is out of date. Please update the app.\"\n};\nvar ShareContactsErrorCodes = /* @__PURE__ */ ((ShareContactsErrorCodes2) => {\n  ShareContactsErrorCodes2[\"UserRejected\"] = \"user_rejected\";\n  ShareContactsErrorCodes2[\"GenericError\"] = \"generic_error\";\n  return ShareContactsErrorCodes2;\n})(ShareContactsErrorCodes || {});\nvar ShareContactsErrorMessage = {\n  [\"user_rejected\" /* UserRejected */]: \"User rejected the request.\",\n  [\"generic_error\" /* GenericError */]: \"Something unexpected went wrong.\"\n};\n\n// minikit.ts\n\n\n\n// helpers/siwe/validate-wallet-auth-command-input.ts\nvar validateWalletAuthCommandInput = (params) => {\n  if (!params.nonce) {\n    return { valid: false, message: \"'nonce' is required\" };\n  }\n  if (params.nonce.length < 8) {\n    return { valid: false, message: \"'nonce' must be at least 8 characters\" };\n  }\n  if (params.statement && params.statement.includes(\"\\n\")) {\n    return { valid: false, message: \"'statement' must not contain newlines\" };\n  }\n  if (params.expirationTime && new Date(params.expirationTime) < /* @__PURE__ */ new Date()) {\n    return { valid: false, message: \"'expirationTime' must be in the future\" };\n  }\n  if (params.expirationTime && new Date(params.expirationTime) > new Date(Date.now() + 7 * 24 * 60 * 60 * 1e3)) {\n    return { valid: false, message: \"'expirationTime' must be within 7 days\" };\n  }\n  if (params.notBefore && new Date(params.notBefore) > new Date(Date.now() + 7 * 24 * 60 * 60 * 1e3)) {\n    return { valid: false, message: \"'notBefore' must be within 7 days\" };\n  }\n  return { valid: true };\n};\n\n// helpers/siwe/siwe.ts\n\n\nvar PREAMBLE = \" wants you to sign in with your Ethereum account:\";\nvar URI_TAG = \"URI: \";\nvar VERSION_TAG = \"Version: \";\nvar CHAIN_TAG = \"Chain ID: \";\nvar NONCE_TAG = \"Nonce: \";\nvar IAT_TAG = \"Issued At: \";\nvar EXP_TAG = \"Expiration Time: \";\nvar NBF_TAG = \"Not Before: \";\nvar RID_TAG = \"Request ID: \";\nvar ERC_191_PREFIX = \"\u0019Ethereum Signed Message:\\n\";\nvar tagged = (line, tag) => {\n  if (line && line.includes(tag)) {\n    return line.replace(tag, \"\");\n  } else {\n    throw new Error(`Missing '${tag}'`);\n  }\n};\nvar parseSiweMessage = (inputString) => {\n  const lines = inputString.split(\"\\n\")[Symbol.iterator]();\n  const domain = tagged(lines.next()?.value, PREAMBLE);\n  const address = lines.next()?.value;\n  lines.next();\n  const nextValue = lines.next()?.value;\n  let statement;\n  if (nextValue) {\n    statement = nextValue;\n    lines.next();\n  }\n  const uri = tagged(lines.next()?.value, URI_TAG);\n  const version = tagged(lines.next()?.value, VERSION_TAG);\n  const chain_id = tagged(lines.next()?.value, CHAIN_TAG);\n  const nonce = tagged(lines.next()?.value, NONCE_TAG);\n  const issued_at = tagged(lines.next()?.value, IAT_TAG);\n  let expiration_time, not_before, request_id;\n  for (let line of lines) {\n    if (line.startsWith(EXP_TAG)) {\n      expiration_time = tagged(line, EXP_TAG);\n    } else if (line.startsWith(NBF_TAG)) {\n      not_before = tagged(line, NBF_TAG);\n    } else if (line.startsWith(RID_TAG)) {\n      request_id = tagged(line, RID_TAG);\n    }\n  }\n  if (lines.next().done === false) {\n    throw new Error(\"Extra lines in the input\");\n  }\n  const siweMessageData = {\n    domain,\n    address,\n    statement,\n    uri,\n    version,\n    chain_id,\n    nonce,\n    issued_at,\n    expiration_time,\n    not_before,\n    request_id\n  };\n  return siweMessageData;\n};\nvar generateSiweMessage = (siweMessageData) => {\n  let siweMessage = \"\";\n  if (siweMessageData.scheme) {\n    siweMessage += `${siweMessageData.scheme}://${siweMessageData.domain} wants you to sign in with your Ethereum account:\n`;\n  } else {\n    siweMessage += `${siweMessageData.domain} wants you to sign in with your Ethereum account:\n`;\n  }\n  if (siweMessageData.address) {\n    siweMessage += `${siweMessageData.address}\n`;\n  } else {\n    siweMessage += \"{address}\\n\";\n  }\n  siweMessage += \"\\n\";\n  if (siweMessageData.statement) {\n    siweMessage += `${siweMessageData.statement}\n`;\n  }\n  siweMessage += \"\\n\";\n  siweMessage += `URI: ${siweMessageData.uri}\n`;\n  siweMessage += `Version: ${siweMessageData.version}\n`;\n  siweMessage += `Chain ID: ${siweMessageData.chain_id}\n`;\n  siweMessage += `Nonce: ${siweMessageData.nonce}\n`;\n  siweMessage += `Issued At: ${siweMessageData.issued_at}\n`;\n  if (siweMessageData.expiration_time) {\n    siweMessage += `Expiration Time: ${siweMessageData.expiration_time}\n`;\n  }\n  if (siweMessageData.not_before) {\n    siweMessage += `Not Before: ${siweMessageData.not_before}\n`;\n  }\n  if (siweMessageData.request_id) {\n    siweMessage += `Request ID: ${siweMessageData.request_id}\n`;\n  }\n  return siweMessage;\n};\nvar SAFE_CONTRACT_ABI = [\n  {\n    name: \"checkSignatures\",\n    type: \"function\",\n    stateMutability: \"view\",\n    inputs: [\n      { name: \"dataHash\", type: \"bytes32\" },\n      { name: \"data\", type: \"bytes\" },\n      { name: \"signature\", type: \"bytes\" }\n    ],\n    outputs: []\n  }\n];\nvar verifySiweMessage = async (payload, nonce, statement, requestId, userProvider) => {\n  if (typeof window !== \"undefined\") {\n    throw new Error(\"Verify can only be called in the backend\");\n  }\n  const { message, signature, address } = payload;\n  const siweMessageData = parseSiweMessage(message);\n  if (siweMessageData.expiration_time) {\n    const expirationTime = new Date(siweMessageData.expiration_time);\n    if (expirationTime < /* @__PURE__ */ new Date()) {\n      throw new Error(\"Expired message\");\n    }\n  }\n  if (siweMessageData.not_before) {\n    const notBefore = new Date(siweMessageData.not_before);\n    if (notBefore > /* @__PURE__ */ new Date()) {\n      throw new Error(\"Not Before time has not passed\");\n    }\n  }\n  if (nonce && siweMessageData.nonce !== nonce) {\n    throw new Error(\n      `Nonce mismatch. Got: ${siweMessageData.nonce}, Expected: ${nonce}`\n    );\n  }\n  if (statement && siweMessageData.statement !== statement) {\n    throw new Error(\n      `Statement mismatch. Got: ${siweMessageData.statement}, Expected: ${statement}`\n    );\n  }\n  if (requestId && siweMessageData.request_id !== requestId) {\n    throw new Error(\n      `Request ID mismatch. Got: ${siweMessageData.request_id}, Expected: ${requestId}`\n    );\n  }\n  let provider = userProvider || (0,viem__WEBPACK_IMPORTED_MODULE_2__.createPublicClient)({ chain: viem_chains__WEBPACK_IMPORTED_MODULE_3__.optimism, transport: (0,viem__WEBPACK_IMPORTED_MODULE_4__.http)() });\n  const signedMessage = `${ERC_191_PREFIX}${message.length}${message}`;\n  const messageBytes = Buffer.from(signedMessage, \"utf8\").toString(\"hex\");\n  const hashedMessage = (0,viem__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(signedMessage);\n  const contract = (0,viem__WEBPACK_IMPORTED_MODULE_6__.getContract)({\n    address,\n    abi: SAFE_CONTRACT_ABI,\n    client: provider\n  });\n  try {\n    await contract.read.checkSignatures([\n      hashedMessage,\n      `0x${messageBytes}`,\n      `0x${signature}`\n    ]);\n  } catch (error) {\n    throw new Error(\"Signature verification failed\");\n  }\n  return { isValid: true, siweMessageData };\n};\n\n// helpers/payment/client.ts\nvar tokenToDecimals = (amount, token) => {\n  const decimals = TokenDecimals[token];\n  if (decimals === void 0) {\n    throw new Error(`Invalid token: ${token}`);\n  }\n  const factor = 10 ** decimals;\n  const result = amount * factor;\n  if (!Number.isInteger(result)) {\n    throw new Error(`The resulting amount is not a whole number: ${result}`);\n  }\n  return result;\n};\nvar validatePaymentPayload = (payload) => {\n  if (payload.tokens.some(\n    (token) => token.symbol == \"USDCE\" && parseFloat(token.token_amount) < 0.1\n  )) {\n    console.error(\"USDCE amount should be greater than $0.1\");\n    return false;\n  }\n  if (payload.reference.length > 36) {\n    console.error(\"Reference must not exceed 36 characters\");\n    return false;\n  }\n  return true;\n};\n\n// helpers/usernames/index.ts\nvar getUserProfile = async (address) => {\n  const res = await fetch(\"https://usernames.worldcoin.org/api/v1/query\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      addresses: [address]\n    })\n  });\n  const usernames = await res.json();\n  return usernames[0] ?? { username: null, profilePictureUrl: null };\n};\n\n// minikit.ts\nvar sendMiniKitEvent = (payload) => {\n  sendWebviewEvent(payload);\n};\nvar _MiniKit = class _MiniKit {\n  static sendInit() {\n    sendWebviewEvent({\n      command: \"init\",\n      payload: { version: this.MINIKIT_VERSION }\n    });\n  }\n  static subscribe(event, handler) {\n    if (event === \"miniapp-wallet-auth\" /* MiniAppWalletAuth */) {\n      const originalHandler = handler;\n      const wrappedHandler = (payload) => {\n        if (payload.status === \"success\") {\n          _MiniKit.walletAddress = payload.address;\n          getUserProfile(payload.address).then((queryResponse) => {\n            _MiniKit.user = {\n              username: queryResponse.username,\n              profilePictureUrl: queryResponse.profilePictureUrl,\n              walletAddress: payload.address\n            };\n          });\n        }\n        originalHandler(payload);\n      };\n      this.listeners[event] = wrappedHandler;\n    } else {\n      this.listeners[event] = handler;\n    }\n  }\n  static unsubscribe(event) {\n    delete this.listeners[event];\n  }\n  static trigger(event, payload) {\n    if (!this.listeners[event]) {\n      console.error(`No handler for event ${event}`);\n      return;\n    }\n    this.listeners[event](payload);\n  }\n  static async awaitCommand(event, command, executor) {\n    return new Promise((resolve) => {\n      let commandPayload = null;\n      const handleAndUnsubscribe = (payload) => {\n        this.unsubscribe(event);\n        resolve({ commandPayload, finalPayload: payload });\n      };\n      this.subscribe(event, handleAndUnsubscribe);\n      commandPayload = executor();\n    });\n  }\n  static commandsValid(input) {\n    return Object.entries(this.commandVersion).every(\n      ([commandName, version]) => {\n        const commandInput = input.find(\n          (command) => command.name === commandName\n        );\n        if (!commandInput) {\n          console.error(\n            `Command ${commandName} is not supported by the app. Try updating the app version`\n          );\n        } else {\n          _MiniKit.isCommandAvailable[commandName] = true;\n        }\n        return commandInput ? commandInput.supported_versions.includes(version) : false;\n      }\n    );\n  }\n  static install(appId) {\n    if (typeof window === \"undefined\" || Boolean(window.MiniKit)) {\n      return {\n        success: false,\n        errorCode: \"already_installed\" /* AlreadyInstalled */,\n        errorMessage: MiniKitInstallErrorMessage[\"already_installed\" /* AlreadyInstalled */]\n      };\n    }\n    if (!appId) {\n      console.warn(\"App ID not provided during install\");\n    } else {\n      _MiniKit.appId = appId;\n    }\n    if (!window.WorldApp) {\n      return {\n        success: false,\n        errorCode: \"outside_of_worldapp\" /* OutsideOfWorldApp */,\n        errorMessage: MiniKitInstallErrorMessage[\"outside_of_worldapp\" /* OutsideOfWorldApp */]\n      };\n    }\n    try {\n      window.MiniKit = _MiniKit;\n      this.sendInit();\n    } catch (error) {\n      console.error(\n        MiniKitInstallErrorMessage[\"unknown\" /* Unknown */],\n        error\n      );\n      return {\n        success: false,\n        errorCode: \"unknown\" /* Unknown */,\n        errorMessage: MiniKitInstallErrorMessage[\"unknown\" /* Unknown */]\n      };\n    }\n    if (!this.commandsValid(window.WorldApp.supported_commands)) {\n      return {\n        success: false,\n        errorCode: \"app_out_of_date\" /* AppOutOfDate */,\n        errorMessage: MiniKitInstallErrorMessage[\"app_out_of_date\" /* AppOutOfDate */]\n      };\n    }\n    return { success: true };\n  }\n  static isInstalled(debug) {\n    if (debug) console.log(\"MiniKit is alive!\");\n    const isInstalled = Boolean(window.MiniKit);\n    if (!isInstalled)\n      console.error(\n        \"MiniKit is not installed. Make sure you're running the application inside of World App\"\n      );\n    return isInstalled;\n  }\n};\n_MiniKit.MINIKIT_VERSION = 1;\n_MiniKit.commandVersion = {\n  [\"verify\" /* Verify */]: 1,\n  [\"pay\" /* Pay */]: 1,\n  [\"wallet-auth\" /* WalletAuth */]: 1,\n  [\"send-transaction\" /* SendTransaction */]: 1,\n  [\"sign-message\" /* SignMessage */]: 1,\n  [\"sign-typed-data\" /* SignTypedData */]: 1,\n  [\"share-contacts\" /* ShareContacts */]: 1\n};\n_MiniKit.isCommandAvailable = {\n  [\"verify\" /* Verify */]: false,\n  [\"pay\" /* Pay */]: false,\n  [\"wallet-auth\" /* WalletAuth */]: false,\n  [\"send-transaction\" /* SendTransaction */]: false,\n  [\"sign-message\" /* SignMessage */]: false,\n  [\"sign-typed-data\" /* SignTypedData */]: false,\n  [\"share-contacts\" /* ShareContacts */]: false\n};\n_MiniKit.listeners = {\n  [\"miniapp-verify-action\" /* MiniAppVerifyAction */]: () => {\n  },\n  [\"miniapp-payment\" /* MiniAppPayment */]: () => {\n  },\n  [\"miniapp-wallet-auth\" /* MiniAppWalletAuth */]: () => {\n  },\n  [\"miniapp-send-transaction\" /* MiniAppSendTransaction */]: () => {\n  },\n  [\"miniapp-sign-message\" /* MiniAppSignMessage */]: () => {\n  },\n  [\"miniapp-sign-typed-data\" /* MiniAppSignTypedData */]: () => {\n  },\n  [\"miniapp-share-contacts\" /* MiniAppShareContacts */]: () => {\n  }\n};\n_MiniKit.appId = null;\n_MiniKit.walletAddress = null;\n_MiniKit.user = null;\n_MiniKit.commands = {\n  verify: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"verify\" /* Verify */]) {\n      console.error(\n        \"'verify' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    const timestamp = (/* @__PURE__ */ new Date()).toISOString();\n    const eventPayload = {\n      action: (0,_worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_1__.encodeAction)(payload.action),\n      signal: (0,_worldcoin_idkit_core_hashing__WEBPACK_IMPORTED_MODULE_1__.generateSignal)(payload.signal).digest,\n      verification_level: payload.verification_level || _worldcoin_idkit_core__WEBPACK_IMPORTED_MODULE_0__.VerificationLevel.Orb,\n      timestamp\n    };\n    sendMiniKitEvent({\n      command: \"verify\" /* Verify */,\n      version: _MiniKit.commandVersion[\"verify\" /* Verify */],\n      payload: eventPayload\n    });\n    return eventPayload;\n  },\n  pay: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"pay\" /* Pay */]) {\n      console.error(\n        \"'pay' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    if (!validatePaymentPayload(payload)) {\n      return null;\n    }\n    const network = \"worldchain\" /* WorldChain */;\n    const eventPayload = {\n      ...payload,\n      network\n    };\n    sendMiniKitEvent({\n      command: \"pay\" /* Pay */,\n      version: _MiniKit.commandVersion[\"pay\" /* Pay */],\n      payload: eventPayload\n    });\n    return eventPayload;\n  },\n  walletAuth: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"wallet-auth\" /* WalletAuth */]) {\n      console.error(\n        \"'walletAuth' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    const validationResult = validateWalletAuthCommandInput(payload);\n    if (!validationResult.valid) {\n      console.error(\n        \"Failed to validate wallet auth input:\\n\\n -->\",\n        validationResult.message\n      );\n      return null;\n    }\n    let protocol = null;\n    try {\n      const currentUrl = new URL(window.location.href);\n      protocol = currentUrl.protocol.split(\":\")[0];\n    } catch (error) {\n      console.error(\"Failed to get current URL\", error);\n      return null;\n    }\n    const siweMessage = generateSiweMessage({\n      scheme: protocol,\n      domain: window.location.host,\n      statement: payload.statement ?? void 0,\n      uri: window.location.href,\n      version: 1,\n      chain_id: 10,\n      nonce: payload.nonce,\n      issued_at: (/* @__PURE__ */ new Date()).toISOString(),\n      expiration_time: payload.expirationTime?.toISOString() ?? void 0,\n      not_before: payload.notBefore?.toISOString() ?? void 0,\n      request_id: payload.requestId ?? void 0\n    });\n    const walletAuthPayload = { siweMessage };\n    sendMiniKitEvent({\n      command: \"wallet-auth\" /* WalletAuth */,\n      version: _MiniKit.commandVersion[\"wallet-auth\" /* WalletAuth */],\n      payload: walletAuthPayload\n    });\n    return walletAuthPayload;\n  },\n  sendTransaction: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"send-transaction\" /* SendTransaction */]) {\n      console.error(\n        \"'sendTransaction' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"send-transaction\" /* SendTransaction */,\n      version: 1,\n      payload\n    });\n    return payload;\n  },\n  signMessage: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-message\" /* SignMessage */]) {\n      console.error(\n        \"'signMessage' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"sign-message\" /* SignMessage */,\n      version: 1,\n      payload\n    });\n    return payload;\n  },\n  signTypedData: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-typed-data\" /* SignTypedData */]) {\n      console.error(\n        \"'signTypedData' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"sign-typed-data\" /* SignTypedData */,\n      version: 1,\n      payload\n    });\n    return payload;\n  },\n  shareContacts: (payload) => {\n    if (typeof window === \"undefined\" || !_MiniKit.isCommandAvailable[\"sign-typed-data\" /* SignTypedData */]) {\n      console.error(\n        \"'shareContacts' command is unavailable. Check MiniKit.install() or update the app version\"\n      );\n      return null;\n    }\n    sendMiniKitEvent({\n      command: \"share-contacts\" /* ShareContacts */,\n      version: 1,\n      payload\n    });\n    return payload;\n  }\n};\n/**\n * This object contains async versions of all the commands.\n * Instead of using event listeners, you can just `await` these.\n *\n * They return a standardized object\n *\n * commandPayload - object returned by the command function\n *\n * finalPayload - object returned by the event listener, or in other words, WorldApp response\n */\n_MiniKit.commandsAsync = {\n  verify: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-verify-action\" /* MiniAppVerifyAction */,\n          \"verify\" /* Verify */,\n          () => _MiniKit.commands.verify(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  pay: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-payment\" /* MiniAppPayment */,\n          \"pay\" /* Pay */,\n          () => _MiniKit.commands.pay(payload)\n        );\n        resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  walletAuth: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-wallet-auth\" /* MiniAppWalletAuth */,\n          \"wallet-auth\" /* WalletAuth */,\n          () => _MiniKit.commands.walletAuth(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  sendTransaction: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-send-transaction\" /* MiniAppSendTransaction */,\n          \"send-transaction\" /* SendTransaction */,\n          () => _MiniKit.commands.sendTransaction(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  signMessage: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-sign-message\" /* MiniAppSignMessage */,\n          \"sign-message\" /* SignMessage */,\n          () => _MiniKit.commands.signMessage(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  signTypedData: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-sign-typed-data\" /* MiniAppSignTypedData */,\n          \"sign-typed-data\" /* SignTypedData */,\n          () => _MiniKit.commands.signTypedData(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  },\n  shareContacts: async (payload) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await _MiniKit.awaitCommand(\n          \"miniapp-share-contacts\" /* MiniAppShareContacts */,\n          \"share-contacts\" /* ShareContacts */,\n          () => _MiniKit.commands.shareContacts(payload)\n        );\n        return resolve(response);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n};\nvar MiniKit = _MiniKit;\n\n// index.ts\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHdvcmxkY29pbittaW5pa2l0LWpzQDEuMy4wX0B0eXBlcytyZWFjdEAxOC4zLjRfcmVhY3RAMTguMy4xX3R5cGVzY3JpcHRANS41LjRfdmllbUAyLjIwLjBfdHlwZXNjcmlwdEA1LjUuNF8vbm9kZV9tb2R1bGVzL0B3b3JsZGNvaW4vbWluaWtpdC1qcy9idWlsZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxlQUFlOztBQUVoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMscUJBQXFCOztBQUV0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxjQUFjO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZUFBZTs7QUFFaEI7QUFDc0Q7QUFDa0I7QUFDeEU7QUFDQSxHQUFHLGdFQUFhO0FBQ2hCLEdBQUcsZ0VBQWE7QUFDaEIsR0FBRyxnRUFBYTtBQUNoQixHQUFHLGdFQUFhO0FBQ2hCLEdBQUcsZ0VBQWE7QUFDaEIsR0FBRyxnRUFBYTtBQUNoQixHQUFHLGdFQUFhO0FBQ2hCLEdBQUcsZ0VBQWE7QUFDaEIsR0FBRyxnRUFBYTtBQUNoQixHQUFHLGdFQUFhO0FBQ2hCLEdBQUcsZ0VBQWE7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHlCQUF5QjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLCtCQUErQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0QkFBNEI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGlDQUFpQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNkJBQTZCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsK0JBQStCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywrQkFBK0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDMEQ7QUFDbUI7O0FBRTdFO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxXQUFXO0FBQ1g7O0FBRUE7QUFNYztBQUN5QjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixnQ0FBZ0MsSUFBSTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsdUJBQXVCLEtBQUssd0JBQXdCO0FBQzFFO0FBQ0EsSUFBSTtBQUNKLHNCQUFzQix3QkFBd0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0EsSUFBSTtBQUNKLHFCQUFxQixRQUFRO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtQ0FBbUM7QUFDM0MsUUFBUSw2QkFBNkI7QUFDckMsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDhCQUE4QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0JBQXNCLGNBQWMsTUFBTTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywwQkFBMEIsY0FBYyxVQUFVO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDJCQUEyQixjQUFjLFVBQVU7QUFDdEY7QUFDQTtBQUNBLGlDQUFpQyx3REFBa0IsR0FBRyxPQUFPLGlEQUFRLGFBQWEsMENBQUksSUFBSTtBQUMxRiwyQkFBMkIsZUFBZSxFQUFFLGVBQWUsRUFBRSxRQUFRO0FBQ3JFO0FBQ0Esd0JBQXdCLGlEQUFXO0FBQ25DLG1CQUFtQixpREFBVztBQUM5QjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsV0FBVyxhQUFhO0FBQ3hCLFdBQVcsVUFBVTtBQUNyQjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLE1BQU07QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsT0FBTztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQSwyQkFBMkI7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxNQUFNO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1Q0FBdUM7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixhQUFhO0FBQ3BDO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJFQUFZO0FBQzFCLGNBQWMsNkVBQWM7QUFDNUIsd0RBQXdELG9FQUFpQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDZ0Y7QUFHekM7QUErQnJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXBwLXJvdXRlci10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9Ad29ybGRjb2luK21pbmlraXQtanNAMS4zLjBfQHR5cGVzK3JlYWN0QDE4LjMuNF9yZWFjdEAxOC4zLjFfdHlwZXNjcmlwdEA1LjUuNF92aWVtQDIuMjAuMF90eXBlc2NyaXB0QDUuNS40Xy9ub2RlX21vZHVsZXMvQHdvcmxkY29pbi9taW5pa2l0LWpzL2J1aWxkL2luZGV4LmpzP2IzNjEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaGVscGVycy9zZW5kLXdlYnZpZXctZXZlbnQudHNcbnZhciBzZW5kV2Vidmlld0V2ZW50ID0gKHBheWxvYWQpID0+IHtcbiAgaWYgKHdpbmRvdy53ZWJraXQpIHtcbiAgICB3aW5kb3cud2Via2l0Py5tZXNzYWdlSGFuZGxlcnM/Lm1pbmlraXQ/LnBvc3RNZXNzYWdlPy4ocGF5bG9hZCk7XG4gIH0gZWxzZSBpZiAod2luZG93LkFuZHJvaWQpIHtcbiAgICB3aW5kb3cuQW5kcm9pZC5wb3N0TWVzc2FnZT8uKEpTT04uc3RyaW5naWZ5KHBheWxvYWQpKTtcbiAgfVxufTtcblxuLy8gdHlwZXMvY29tbWFuZHMudHNcbnZhciBDb21tYW5kID0gLyogQF9fUFVSRV9fICovICgoQ29tbWFuZDIpID0+IHtcbiAgQ29tbWFuZDJbXCJWZXJpZnlcIl0gPSBcInZlcmlmeVwiO1xuICBDb21tYW5kMltcIlBheVwiXSA9IFwicGF5XCI7XG4gIENvbW1hbmQyW1wiV2FsbGV0QXV0aFwiXSA9IFwid2FsbGV0LWF1dGhcIjtcbiAgQ29tbWFuZDJbXCJTZW5kVHJhbnNhY3Rpb25cIl0gPSBcInNlbmQtdHJhbnNhY3Rpb25cIjtcbiAgQ29tbWFuZDJbXCJTaWduTWVzc2FnZVwiXSA9IFwic2lnbi1tZXNzYWdlXCI7XG4gIENvbW1hbmQyW1wiU2lnblR5cGVkRGF0YVwiXSA9IFwic2lnbi10eXBlZC1kYXRhXCI7XG4gIENvbW1hbmQyW1wiU2hhcmVDb250YWN0c1wiXSA9IFwic2hhcmUtY29udGFjdHNcIjtcbiAgcmV0dXJuIENvbW1hbmQyO1xufSkoQ29tbWFuZCB8fCB7fSk7XG5cbi8vIHR5cGVzL3Jlc3BvbnNlcy50c1xudmFyIFJlc3BvbnNlRXZlbnQgPSAvKiBAX19QVVJFX18gKi8gKChSZXNwb25zZUV2ZW50MikgPT4ge1xuICBSZXNwb25zZUV2ZW50MltcIk1pbmlBcHBWZXJpZnlBY3Rpb25cIl0gPSBcIm1pbmlhcHAtdmVyaWZ5LWFjdGlvblwiO1xuICBSZXNwb25zZUV2ZW50MltcIk1pbmlBcHBQYXltZW50XCJdID0gXCJtaW5pYXBwLXBheW1lbnRcIjtcbiAgUmVzcG9uc2VFdmVudDJbXCJNaW5pQXBwV2FsbGV0QXV0aFwiXSA9IFwibWluaWFwcC13YWxsZXQtYXV0aFwiO1xuICBSZXNwb25zZUV2ZW50MltcIk1pbmlBcHBTZW5kVHJhbnNhY3Rpb25cIl0gPSBcIm1pbmlhcHAtc2VuZC10cmFuc2FjdGlvblwiO1xuICBSZXNwb25zZUV2ZW50MltcIk1pbmlBcHBTaWduTWVzc2FnZVwiXSA9IFwibWluaWFwcC1zaWduLW1lc3NhZ2VcIjtcbiAgUmVzcG9uc2VFdmVudDJbXCJNaW5pQXBwU2lnblR5cGVkRGF0YVwiXSA9IFwibWluaWFwcC1zaWduLXR5cGVkLWRhdGFcIjtcbiAgUmVzcG9uc2VFdmVudDJbXCJNaW5pQXBwU2hhcmVDb250YWN0c1wiXSA9IFwibWluaWFwcC1zaGFyZS1jb250YWN0c1wiO1xuICByZXR1cm4gUmVzcG9uc2VFdmVudDI7XG59KShSZXNwb25zZUV2ZW50IHx8IHt9KTtcblxuLy8gdHlwZXMvcGF5bWVudC50c1xudmFyIFRva2VucyA9IC8qIEBfX1BVUkVfXyAqLyAoKFRva2VuczIpID0+IHtcbiAgVG9rZW5zMltcIlVTRENFXCJdID0gXCJVU0RDRVwiO1xuICBUb2tlbnMyW1wiV0xEXCJdID0gXCJXTERcIjtcbiAgcmV0dXJuIFRva2VuczI7XG59KShUb2tlbnMgfHwge30pO1xudmFyIFRva2VuRGVjaW1hbHMgPSB7XG4gIFtcIlVTRENFXCIgLyogVVNEQ0UgKi9dOiA2LFxuICBbXCJXTERcIiAvKiBXTEQgKi9dOiAxOFxufTtcbnZhciBOZXR3b3JrID0gLyogQF9fUFVSRV9fICovICgoTmV0d29yazIpID0+IHtcbiAgTmV0d29yazJbXCJPcHRpbWlzbVwiXSA9IFwib3B0aW1pc21cIjtcbiAgTmV0d29yazJbXCJXb3JsZENoYWluXCJdID0gXCJ3b3JsZGNoYWluXCI7XG4gIHJldHVybiBOZXR3b3JrMjtcbn0pKE5ldHdvcmsgfHwge30pO1xuXG4vLyB0eXBlcy9lcnJvcnMudHNcbmltcG9ydCB7IEFwcEVycm9yQ29kZXMgfSBmcm9tIFwiQHdvcmxkY29pbi9pZGtpdC1jb3JlXCI7XG5pbXBvcnQgeyBBcHBFcnJvckNvZGVzIGFzIEFwcEVycm9yQ29kZXMyIH0gZnJvbSBcIkB3b3JsZGNvaW4vaWRraXQtY29yZVwiO1xudmFyIFZlcmlmaWNhdGlvbkVycm9yTWVzc2FnZSA9IHtcbiAgW0FwcEVycm9yQ29kZXMuVmVyaWZpY2F0aW9uUmVqZWN0ZWRdOiBcIllvdVxcdTIwMTl2ZSBjYW5jZWxsZWQgdGhlIHJlcXVlc3QgaW4gV29ybGQgQXBwLlwiLFxuICBbQXBwRXJyb3JDb2Rlcy5NYXhWZXJpZmljYXRpb25zUmVhY2hlZF06IFwiWW91IGhhdmUgYWxyZWFkeSB2ZXJpZmllZCB0aGUgbWF4aW11bSBudW1iZXIgb2YgdGltZXMgZm9yIHRoaXMgYWN0aW9uLlwiLFxuICBbQXBwRXJyb3JDb2Rlcy5DcmVkZW50aWFsVW5hdmFpbGFibGVdOiBcIkl0IHNlZW1zIHlvdSBkbyBub3QgaGF2ZSB0aGUgdmVyaWZpY2F0aW9uIGxldmVsIHJlcXVpcmVkIGJ5IHRoaXMgYXBwLlwiLFxuICBbQXBwRXJyb3JDb2Rlcy5NYWxmb3JtZWRSZXF1ZXN0XTogXCJUaGVyZSB3YXMgYSBwcm9ibGVtIHdpdGggdGhpcyByZXF1ZXN0LiBQbGVhc2UgdHJ5IGFnYWluIG9yIGNvbnRhY3QgdGhlIGFwcCBvd25lci5cIixcbiAgW0FwcEVycm9yQ29kZXMuSW52YWxpZE5ldHdvcmtdOiBcIkludmFsaWQgbmV0d29yay4gSWYgeW91IGFyZSB0aGUgYXBwIG93bmVyLCB2aXNpdCBkb2NzLndvcmxkY29pbi5vcmcvdGVzdCBmb3IgZGV0YWlscy5cIixcbiAgW0FwcEVycm9yQ29kZXMuSW5jbHVzaW9uUHJvb2ZGYWlsZWRdOiBcIlRoZXJlIHdhcyBhbiBpc3N1ZSBmZXRjaGluZyB5b3VyIGNyZWRlbnRpYWwuIFBsZWFzZSB0cnkgYWdhaW4uXCIsXG4gIFtBcHBFcnJvckNvZGVzLkluY2x1c2lvblByb29mUGVuZGluZ106IFwiWW91ciBpZGVudGl0eSBpcyBzdGlsbCBiZWluZyByZWdpc3RlcmVkLiBQbGVhc2Ugd2FpdCBhIGZldyBtaW51dGVzIGFuZCB0cnkgYWdhaW4uXCIsXG4gIFtBcHBFcnJvckNvZGVzLlVuZXhwZWN0ZWRSZXNwb25zZV06IFwiVW5leHBlY3RlZCByZXNwb25zZSBmcm9tIHlvdXIgd2FsbGV0LiBQbGVhc2UgdHJ5IGFnYWluLlwiLFxuICBbQXBwRXJyb3JDb2Rlcy5GYWlsZWRCeUhvc3RBcHBdOiBcIlZlcmlmaWNhdGlvbiBmYWlsZWQgYnkgdGhlIGFwcC4gUGxlYXNlIGNvbnRhY3QgdGhlIGFwcCBvd25lciBmb3IgZGV0YWlscy5cIixcbiAgW0FwcEVycm9yQ29kZXMuR2VuZXJpY0Vycm9yXTogXCJTb21ldGhpbmcgdW5leHBlY3RlZCB3ZW50IHdyb25nLiBQbGVhc2UgdHJ5IGFnYWluLlwiLFxuICBbQXBwRXJyb3JDb2Rlcy5Db25uZWN0aW9uRmFpbGVkXTogXCJDb25uZWN0aW9uIHRvIHlvdXIgd2FsbGV0IGZhaWxlZC4gUGxlYXNlIHRyeSBhZ2Fpbi5cIlxufTtcbnZhciBQYXltZW50RXJyb3JDb2RlcyA9IC8qIEBfX1BVUkVfXyAqLyAoKFBheW1lbnRFcnJvckNvZGVzMikgPT4ge1xuICBQYXltZW50RXJyb3JDb2RlczJbXCJJbnB1dEVycm9yXCJdID0gXCJpbnB1dF9lcnJvclwiO1xuICBQYXltZW50RXJyb3JDb2RlczJbXCJQYXltZW50UmVqZWN0ZWRcIl0gPSBcInBheW1lbnRfcmVqZWN0ZWRcIjtcbiAgUGF5bWVudEVycm9yQ29kZXMyW1wiSW52YWxpZFJlY2VpdmVyXCJdID0gXCJpbnZhbGlkX3JlY2VpdmVyXCI7XG4gIFBheW1lbnRFcnJvckNvZGVzMltcIkluc3VmZmljaWVudEJhbGFuY2VcIl0gPSBcImluc3VmZmljaWVudF9iYWxhbmNlXCI7XG4gIFBheW1lbnRFcnJvckNvZGVzMltcIlRyYW5zYWN0aW9uRmFpbGVkXCJdID0gXCJ0cmFuc2FjdGlvbl9mYWlsZWRcIjtcbiAgUGF5bWVudEVycm9yQ29kZXMyW1wiR2VuZXJpY0Vycm9yXCJdID0gXCJnZW5lcmljX2Vycm9yXCI7XG4gIFBheW1lbnRFcnJvckNvZGVzMltcIlVzZXJCbG9ja2VkXCJdID0gXCJ1c2VyX2Jsb2NrZWRcIjtcbiAgcmV0dXJuIFBheW1lbnRFcnJvckNvZGVzMjtcbn0pKFBheW1lbnRFcnJvckNvZGVzIHx8IHt9KTtcbnZhciBQYXltZW50RXJyb3JNZXNzYWdlID0ge1xuICBbXCJpbnB1dF9lcnJvclwiIC8qIElucHV0RXJyb3IgKi9dOiBcIlRoZXJlIHdhcyBhIHByb2JsZW0gd2l0aCB0aGlzIHJlcXVlc3QuIFBsZWFzZSB0cnkgYWdhaW4gb3IgY29udGFjdCB0aGUgYXBwIG93bmVyLlwiLFxuICBbXCJwYXltZW50X3JlamVjdGVkXCIgLyogUGF5bWVudFJlamVjdGVkICovXTogXCJZb3VcXHUyMDE5dmUgY2FuY2VsbGVkIHRoZSBwYXltZW50IGluIFdvcmxkIEFwcC5cIixcbiAgW1wiaW52YWxpZF9yZWNlaXZlclwiIC8qIEludmFsaWRSZWNlaXZlciAqL106IFwiVGhlIHJlY2VpdmVyIGFkZHJlc3MgaXMgaW52YWxpZC4gUGxlYXNlIGNvbnRhY3QgdGhlIGFwcCBvd25lci5cIixcbiAgW1wiaW5zdWZmaWNpZW50X2JhbGFuY2VcIiAvKiBJbnN1ZmZpY2llbnRCYWxhbmNlICovXTogXCJZb3UgZG8gbm90IGhhdmUgZW5vdWdoIGJhbGFuY2UgdG8gY29tcGxldGUgdGhpcyB0cmFuc2FjdGlvbi5cIixcbiAgW1widHJhbnNhY3Rpb25fZmFpbGVkXCIgLyogVHJhbnNhY3Rpb25GYWlsZWQgKi9dOiBcIlRoZSB0cmFuc2FjdGlvbiBmYWlsZWQuIFBsZWFzZSB0cnkgYWdhaW4uXCIsXG4gIFtcImdlbmVyaWNfZXJyb3JcIiAvKiBHZW5lcmljRXJyb3IgKi9dOiBcIlNvbWV0aGluZyB1bmV4cGVjdGVkIHdlbnQgd3JvbmcuIFBsZWFzZSB0cnkgYWdhaW4uXCIsXG4gIFtcInVzZXJfYmxvY2tlZFwiIC8qIFVzZXJCbG9ja2VkICovXTogXCJVc2VyJ3MgcmVnaW9uIGlzIGJsb2NrZWQgZnJvbSBtYWtpbmcgcGF5bWVudHMuXCJcbn07XG52YXIgUGF5bWVudFZhbGlkYXRpb25FcnJvcnMgPSAvKiBAX19QVVJFX18gKi8gKChQYXltZW50VmFsaWRhdGlvbkVycm9yczIpID0+IHtcbiAgUGF5bWVudFZhbGlkYXRpb25FcnJvcnMyW1wiTWFsZm9ybWVkUmVxdWVzdFwiXSA9IFwiVGhlcmUgd2FzIGEgcHJvYmxlbSB3aXRoIHRoaXMgcmVxdWVzdC4gUGxlYXNlIHRyeSBhZ2FpbiBvciBjb250YWN0IHRoZSBhcHAgb3duZXIuXCI7XG4gIFBheW1lbnRWYWxpZGF0aW9uRXJyb3JzMltcIkludmFsaWRUb2tlbkFkZHJlc3NcIl0gPSBcIlRoZSB0b2tlbiBhZGRyZXNzIGlzIGludmFsaWQuIFBsZWFzZSBjb250YWN0IHRoZSBhcHAgb3duZXIuXCI7XG4gIFBheW1lbnRWYWxpZGF0aW9uRXJyb3JzMltcIkludmFsaWRBcHBJZFwiXSA9IFwiVGhlIGFwcCBJRCBpcyBpbnZhbGlkLiBQbGVhc2UgY29udGFjdCB0aGUgYXBwIG93bmVyLlwiO1xuICBQYXltZW50VmFsaWRhdGlvbkVycm9yczJbXCJEdXBsaWNhdGVSZWZlcmVuY2VcIl0gPSBcIlRoaXMgcmVmZXJlbmNlIElEIGFscmVhZHkgZXhpc3RzIHBsZWFzZSBnZW5lcmF0ZSBhIG5ldyBvbmUgYW5kIHRyeSBhZ2Fpbi5cIjtcbiAgcmV0dXJuIFBheW1lbnRWYWxpZGF0aW9uRXJyb3JzMjtcbn0pKFBheW1lbnRWYWxpZGF0aW9uRXJyb3JzIHx8IHt9KTtcbnZhciBXYWxsZXRBdXRoRXJyb3JDb2RlcyA9IC8qIEBfX1BVUkVfXyAqLyAoKFdhbGxldEF1dGhFcnJvckNvZGVzMikgPT4ge1xuICBXYWxsZXRBdXRoRXJyb3JDb2RlczJbXCJNYWxmb3JtZWRSZXF1ZXN0XCJdID0gXCJtYWxmb3JtZWRfcmVxdWVzdFwiO1xuICBXYWxsZXRBdXRoRXJyb3JDb2RlczJbXCJVc2VyUmVqZWN0ZWRcIl0gPSBcInVzZXJfcmVqZWN0ZWRcIjtcbiAgV2FsbGV0QXV0aEVycm9yQ29kZXMyW1wiR2VuZXJpY0Vycm9yXCJdID0gXCJnZW5lcmljX2Vycm9yXCI7XG4gIHJldHVybiBXYWxsZXRBdXRoRXJyb3JDb2RlczI7XG59KShXYWxsZXRBdXRoRXJyb3JDb2RlcyB8fCB7fSk7XG52YXIgV2FsbGV0QXV0aEVycm9yTWVzc2FnZSA9IHtcbiAgW1wibWFsZm9ybWVkX3JlcXVlc3RcIiAvKiBNYWxmb3JtZWRSZXF1ZXN0ICovXTogXCJQcm92aWRlZCBwYXJhbWV0ZXJzIGluIHRoZSByZXF1ZXN0IGFyZSBpbnZhbGlkLlwiLFxuICBbXCJ1c2VyX3JlamVjdGVkXCIgLyogVXNlclJlamVjdGVkICovXTogXCJVc2VyIHJlamVjdGVkIHRoZSByZXF1ZXN0LlwiLFxuICBbXCJnZW5lcmljX2Vycm9yXCIgLyogR2VuZXJpY0Vycm9yICovXTogXCJTb21ldGhpbmcgdW5leHBlY3RlZCB3ZW50IHdyb25nLlwiXG59O1xudmFyIFNlbmRUcmFuc2FjdGlvbkVycm9yQ29kZXMgPSAvKiBAX19QVVJFX18gKi8gKChTZW5kVHJhbnNhY3Rpb25FcnJvckNvZGVzMikgPT4ge1xuICBTZW5kVHJhbnNhY3Rpb25FcnJvckNvZGVzMltcIkludmFsaWRPcGVyYXRpb25cIl0gPSBcImludmFsaWRfb3BlcmF0aW9uXCI7XG4gIFNlbmRUcmFuc2FjdGlvbkVycm9yQ29kZXMyW1wiVXNlclJlamVjdGVkXCJdID0gXCJ1c2VyX3JlamVjdGVkXCI7XG4gIFNlbmRUcmFuc2FjdGlvbkVycm9yQ29kZXMyW1wiSW5wdXRFcnJvclwiXSA9IFwiaW5wdXRfZXJyb3JcIjtcbiAgU2VuZFRyYW5zYWN0aW9uRXJyb3JDb2RlczJbXCJTaW11bGF0aW9uRmFpbGVkXCJdID0gXCJzaW11bGF0aW9uX2ZhaWxlZFwiO1xuICBTZW5kVHJhbnNhY3Rpb25FcnJvckNvZGVzMltcIlRyYW5zYWN0aW9uRmFpbGVkXCJdID0gXCJ0cmFuc2FjdGlvbl9mYWlsZWRcIjtcbiAgU2VuZFRyYW5zYWN0aW9uRXJyb3JDb2RlczJbXCJHZW5lcmljRXJyb3JcIl0gPSBcImdlbmVyaWNfZXJyb3JcIjtcbiAgU2VuZFRyYW5zYWN0aW9uRXJyb3JDb2RlczJbXCJEaXNhbGxvd2VkT3BlcmF0aW9uXCJdID0gXCJkaXNhbGxvd2VkX29wZXJhdGlvblwiO1xuICBTZW5kVHJhbnNhY3Rpb25FcnJvckNvZGVzMltcIkludmFsaWRDb250cmFjdFwiXSA9IFwiaW52YWxpZF9jb250cmFjdFwiO1xuICBTZW5kVHJhbnNhY3Rpb25FcnJvckNvZGVzMltcIk1hbGljaW91c09wZXJhdGlvblwiXSA9IFwibWFsaWNpb3VzX29wZXJhdGlvblwiO1xuICByZXR1cm4gU2VuZFRyYW5zYWN0aW9uRXJyb3JDb2RlczI7XG59KShTZW5kVHJhbnNhY3Rpb25FcnJvckNvZGVzIHx8IHt9KTtcbnZhciBTZW5kVHJhbnNhY3Rpb25FcnJvck1lc3NhZ2UgPSB7XG4gIFtcImludmFsaWRfb3BlcmF0aW9uXCIgLyogSW52YWxpZE9wZXJhdGlvbiAqL106IFwiVHJhbnNhY3Rpb24gaW5jbHVkZWQgYW4gb3BlcmF0aW9uIHRoYXQgd2FzIGludmFsaWRcIixcbiAgW1widXNlcl9yZWplY3RlZFwiIC8qIFVzZXJSZWplY3RlZCAqL106IFwiVXNlciByZWplY3RlZCB0aGUgcmVxdWVzdC5cIixcbiAgW1wiaW5wdXRfZXJyb3JcIiAvKiBJbnB1dEVycm9yICovXTogXCJJbnZhbGlkIHBheWxvYWQuXCIsXG4gIFtcInNpbXVsYXRpb25fZmFpbGVkXCIgLyogU2ltdWxhdGlvbkZhaWxlZCAqL106IFwiVGhlIHRyYW5zYWN0aW9uIHNpbXVsYXRpb24gZmFpbGVkLlwiLFxuICBbXCJ0cmFuc2FjdGlvbl9mYWlsZWRcIiAvKiBUcmFuc2FjdGlvbkZhaWxlZCAqL106IFwiVGhlIHRyYW5zYWN0aW9uIGZhaWxlZC4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci5cIixcbiAgW1wiZ2VuZXJpY19lcnJvclwiIC8qIEdlbmVyaWNFcnJvciAqL106IFwiU29tZXRoaW5nIHVuZXhwZWN0ZWQgd2VudCB3cm9uZy4gUGxlYXNlIHRyeSBhZ2Fpbi5cIixcbiAgW1wiZGlzYWxsb3dlZF9vcGVyYXRpb25cIiAvKiBEaXNhbGxvd2VkT3BlcmF0aW9uICovXTogXCJUaGUgb3BlcmF0aW9uIHJlcXVlc3RlZCBpcyBub3QgYWxsb3dlZC4gUGxlYXNlIHJlZmVyIHRvIHRoZSBkb2NzLlwiLFxuICBbXCJpbnZhbGlkX2NvbnRyYWN0XCIgLyogSW52YWxpZENvbnRyYWN0ICovXTogXCJUaGUgY29udHJhY3QgYWRkcmVzcyBpcyBub3QgYWxsb3dlZCBmb3IgeW91ciBhcHBsaWNhdGlvbi4gUGxlYXNlIGNoZWNrIHlvdXIgZGV2ZWxvcGVyIHBvcnRhbCBjb25maWd1cmF0aW9uc1wiLFxuICBbXCJtYWxpY2lvdXNfb3BlcmF0aW9uXCIgLyogTWFsaWNpb3VzT3BlcmF0aW9uICovXTogXCJUaGUgb3BlcmF0aW9uIHJlcXVlc3RlZCBpcyBjb25zaWRlcmVkIG1hbGljaW91cy5cIlxufTtcbnZhciBTaWduTWVzc2FnZUVycm9yQ29kZXMgPSAvKiBAX19QVVJFX18gKi8gKChTaWduTWVzc2FnZUVycm9yQ29kZXMyKSA9PiB7XG4gIFNpZ25NZXNzYWdlRXJyb3JDb2RlczJbXCJJbnZhbGlkTWVzc2FnZVwiXSA9IFwiaW52YWxpZF9tZXNzYWdlXCI7XG4gIFNpZ25NZXNzYWdlRXJyb3JDb2RlczJbXCJVc2VyUmVqZWN0ZWRcIl0gPSBcInVzZXJfcmVqZWN0ZWRcIjtcbiAgU2lnbk1lc3NhZ2VFcnJvckNvZGVzMltcIkdlbmVyaWNFcnJvclwiXSA9IFwiZ2VuZXJpY19lcnJvclwiO1xuICByZXR1cm4gU2lnbk1lc3NhZ2VFcnJvckNvZGVzMjtcbn0pKFNpZ25NZXNzYWdlRXJyb3JDb2RlcyB8fCB7fSk7XG52YXIgU2lnbk1lc3NhZ2VFcnJvck1lc3NhZ2UgPSB7XG4gIFtcImludmFsaWRfbWVzc2FnZVwiIC8qIEludmFsaWRNZXNzYWdlICovXTogXCJJbnZhbGlkIG1lc3NhZ2UgcmVxdWVzdGVkXCIsXG4gIFtcInVzZXJfcmVqZWN0ZWRcIiAvKiBVc2VyUmVqZWN0ZWQgKi9dOiBcIlVzZXIgcmVqZWN0ZWQgdGhlIHJlcXVlc3QuXCIsXG4gIFtcImdlbmVyaWNfZXJyb3JcIiAvKiBHZW5lcmljRXJyb3IgKi9dOiBcIlNvbWV0aGluZyB1bmV4cGVjdGVkIHdlbnQgd3JvbmcuXCJcbn07XG52YXIgU2lnblR5cGVkRGF0YUVycm9yQ29kZXMgPSAvKiBAX19QVVJFX18gKi8gKChTaWduVHlwZWREYXRhRXJyb3JDb2RlczIpID0+IHtcbiAgU2lnblR5cGVkRGF0YUVycm9yQ29kZXMyW1wiSW52YWxpZE9wZXJhdGlvblwiXSA9IFwiaW52YWxpZF9vcGVyYXRpb25cIjtcbiAgU2lnblR5cGVkRGF0YUVycm9yQ29kZXMyW1wiVXNlclJlamVjdGVkXCJdID0gXCJ1c2VyX3JlamVjdGVkXCI7XG4gIFNpZ25UeXBlZERhdGFFcnJvckNvZGVzMltcIklucHV0RXJyb3JcIl0gPSBcImlucHV0X2Vycm9yXCI7XG4gIFNpZ25UeXBlZERhdGFFcnJvckNvZGVzMltcIlNpbXVsYXRpb25GYWlsZWRcIl0gPSBcInNpbXVsYXRpb25fZmFpbGVkXCI7XG4gIFNpZ25UeXBlZERhdGFFcnJvckNvZGVzMltcIkdlbmVyaWNFcnJvclwiXSA9IFwiZ2VuZXJpY19lcnJvclwiO1xuICBTaWduVHlwZWREYXRhRXJyb3JDb2RlczJbXCJEaXNhbGxvd2VkT3BlcmF0aW9uXCJdID0gXCJkaXNhbGxvd2VkX29wZXJhdGlvblwiO1xuICBTaWduVHlwZWREYXRhRXJyb3JDb2RlczJbXCJJbnZhbGlkQ29udHJhY3RcIl0gPSBcImludmFsaWRfY29udHJhY3RcIjtcbiAgU2lnblR5cGVkRGF0YUVycm9yQ29kZXMyW1wiTWFsaWNpb3VzT3BlcmF0aW9uXCJdID0gXCJtYWxpY2lvdXNfb3BlcmF0aW9uXCI7XG4gIHJldHVybiBTaWduVHlwZWREYXRhRXJyb3JDb2RlczI7XG59KShTaWduVHlwZWREYXRhRXJyb3JDb2RlcyB8fCB7fSk7XG52YXIgU2lnblR5cGVkRGF0YUVycm9yTWVzc2FnZSA9IFNlbmRUcmFuc2FjdGlvbkVycm9yTWVzc2FnZTtcbnZhciBNaW5pS2l0SW5zdGFsbEVycm9yQ29kZXMgPSAvKiBAX19QVVJFX18gKi8gKChNaW5pS2l0SW5zdGFsbEVycm9yQ29kZXMyKSA9PiB7XG4gIE1pbmlLaXRJbnN0YWxsRXJyb3JDb2RlczJbXCJVbmtub3duXCJdID0gXCJ1bmtub3duXCI7XG4gIE1pbmlLaXRJbnN0YWxsRXJyb3JDb2RlczJbXCJBbHJlYWR5SW5zdGFsbGVkXCJdID0gXCJhbHJlYWR5X2luc3RhbGxlZFwiO1xuICBNaW5pS2l0SW5zdGFsbEVycm9yQ29kZXMyW1wiT3V0c2lkZU9mV29ybGRBcHBcIl0gPSBcIm91dHNpZGVfb2Zfd29ybGRhcHBcIjtcbiAgTWluaUtpdEluc3RhbGxFcnJvckNvZGVzMltcIk5vdE9uQ2xpZW50XCJdID0gXCJub3Rfb25fY2xpZW50XCI7XG4gIE1pbmlLaXRJbnN0YWxsRXJyb3JDb2RlczJbXCJBcHBPdXRPZkRhdGVcIl0gPSBcImFwcF9vdXRfb2ZfZGF0ZVwiO1xuICByZXR1cm4gTWluaUtpdEluc3RhbGxFcnJvckNvZGVzMjtcbn0pKE1pbmlLaXRJbnN0YWxsRXJyb3JDb2RlcyB8fCB7fSk7XG52YXIgTWluaUtpdEluc3RhbGxFcnJvck1lc3NhZ2UgPSB7XG4gIFtcInVua25vd25cIiAvKiBVbmtub3duICovXTogXCJGYWlsZWQgdG8gaW5zdGFsbCBNaW5pS2l0LlwiLFxuICBbXCJhbHJlYWR5X2luc3RhbGxlZFwiIC8qIEFscmVhZHlJbnN0YWxsZWQgKi9dOiBcIk1pbmlLaXQgaXMgYWxyZWFkeSBpbnN0YWxsZWQuXCIsXG4gIFtcIm91dHNpZGVfb2Zfd29ybGRhcHBcIiAvKiBPdXRzaWRlT2ZXb3JsZEFwcCAqL106IFwiTWluaUFwcCBsYXVuY2hlZCBvdXRzaWRlIG9mIFdvcmxkQXBwLlwiLFxuICBbXCJub3Rfb25fY2xpZW50XCIgLyogTm90T25DbGllbnQgKi9dOiBcIldpbmRvdyBvYmplY3QgaXMgbm90IGF2YWlsYWJsZS5cIixcbiAgW1wiYXBwX291dF9vZl9kYXRlXCIgLyogQXBwT3V0T2ZEYXRlICovXTogXCJXb3JsZEFwcCBpcyBvdXQgb2YgZGF0ZS4gUGxlYXNlIHVwZGF0ZSB0aGUgYXBwLlwiXG59O1xudmFyIFNoYXJlQ29udGFjdHNFcnJvckNvZGVzID0gLyogQF9fUFVSRV9fICovICgoU2hhcmVDb250YWN0c0Vycm9yQ29kZXMyKSA9PiB7XG4gIFNoYXJlQ29udGFjdHNFcnJvckNvZGVzMltcIlVzZXJSZWplY3RlZFwiXSA9IFwidXNlcl9yZWplY3RlZFwiO1xuICBTaGFyZUNvbnRhY3RzRXJyb3JDb2RlczJbXCJHZW5lcmljRXJyb3JcIl0gPSBcImdlbmVyaWNfZXJyb3JcIjtcbiAgcmV0dXJuIFNoYXJlQ29udGFjdHNFcnJvckNvZGVzMjtcbn0pKFNoYXJlQ29udGFjdHNFcnJvckNvZGVzIHx8IHt9KTtcbnZhciBTaGFyZUNvbnRhY3RzRXJyb3JNZXNzYWdlID0ge1xuICBbXCJ1c2VyX3JlamVjdGVkXCIgLyogVXNlclJlamVjdGVkICovXTogXCJVc2VyIHJlamVjdGVkIHRoZSByZXF1ZXN0LlwiLFxuICBbXCJnZW5lcmljX2Vycm9yXCIgLyogR2VuZXJpY0Vycm9yICovXTogXCJTb21ldGhpbmcgdW5leHBlY3RlZCB3ZW50IHdyb25nLlwiXG59O1xuXG4vLyBtaW5pa2l0LnRzXG5pbXBvcnQgeyBWZXJpZmljYXRpb25MZXZlbCB9IGZyb20gXCJAd29ybGRjb2luL2lka2l0LWNvcmVcIjtcbmltcG9ydCB7IGdlbmVyYXRlU2lnbmFsLCBlbmNvZGVBY3Rpb24gfSBmcm9tIFwiQHdvcmxkY29pbi9pZGtpdC1jb3JlL2hhc2hpbmdcIjtcblxuLy8gaGVscGVycy9zaXdlL3ZhbGlkYXRlLXdhbGxldC1hdXRoLWNvbW1hbmQtaW5wdXQudHNcbnZhciB2YWxpZGF0ZVdhbGxldEF1dGhDb21tYW5kSW5wdXQgPSAocGFyYW1zKSA9PiB7XG4gIGlmICghcGFyYW1zLm5vbmNlKSB7XG4gICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBtZXNzYWdlOiBcIidub25jZScgaXMgcmVxdWlyZWRcIiB9O1xuICB9XG4gIGlmIChwYXJhbXMubm9uY2UubGVuZ3RoIDwgOCkge1xuICAgIHJldHVybiB7IHZhbGlkOiBmYWxzZSwgbWVzc2FnZTogXCInbm9uY2UnIG11c3QgYmUgYXQgbGVhc3QgOCBjaGFyYWN0ZXJzXCIgfTtcbiAgfVxuICBpZiAocGFyYW1zLnN0YXRlbWVudCAmJiBwYXJhbXMuc3RhdGVtZW50LmluY2x1ZGVzKFwiXFxuXCIpKSB7XG4gICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBtZXNzYWdlOiBcIidzdGF0ZW1lbnQnIG11c3Qgbm90IGNvbnRhaW4gbmV3bGluZXNcIiB9O1xuICB9XG4gIGlmIChwYXJhbXMuZXhwaXJhdGlvblRpbWUgJiYgbmV3IERhdGUocGFyYW1zLmV4cGlyYXRpb25UaW1lKSA8IC8qIEBfX1BVUkVfXyAqLyBuZXcgRGF0ZSgpKSB7XG4gICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBtZXNzYWdlOiBcIidleHBpcmF0aW9uVGltZScgbXVzdCBiZSBpbiB0aGUgZnV0dXJlXCIgfTtcbiAgfVxuICBpZiAocGFyYW1zLmV4cGlyYXRpb25UaW1lICYmIG5ldyBEYXRlKHBhcmFtcy5leHBpcmF0aW9uVGltZSkgPiBuZXcgRGF0ZShEYXRlLm5vdygpICsgNyAqIDI0ICogNjAgKiA2MCAqIDFlMykpIHtcbiAgICByZXR1cm4geyB2YWxpZDogZmFsc2UsIG1lc3NhZ2U6IFwiJ2V4cGlyYXRpb25UaW1lJyBtdXN0IGJlIHdpdGhpbiA3IGRheXNcIiB9O1xuICB9XG4gIGlmIChwYXJhbXMubm90QmVmb3JlICYmIG5ldyBEYXRlKHBhcmFtcy5ub3RCZWZvcmUpID4gbmV3IERhdGUoRGF0ZS5ub3coKSArIDcgKiAyNCAqIDYwICogNjAgKiAxZTMpKSB7XG4gICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBtZXNzYWdlOiBcIidub3RCZWZvcmUnIG11c3QgYmUgd2l0aGluIDcgZGF5c1wiIH07XG4gIH1cbiAgcmV0dXJuIHsgdmFsaWQ6IHRydWUgfTtcbn07XG5cbi8vIGhlbHBlcnMvc2l3ZS9zaXdlLnRzXG5pbXBvcnQge1xuICBoYXNoTWVzc2FnZSxcbiAgY3JlYXRlUHVibGljQ2xpZW50LFxuICBodHRwLFxuICBnZXRDb250cmFjdFxufSBmcm9tIFwidmllbVwiO1xuaW1wb3J0IHsgb3B0aW1pc20gfSBmcm9tIFwidmllbS9jaGFpbnNcIjtcbnZhciBQUkVBTUJMRSA9IFwiIHdhbnRzIHlvdSB0byBzaWduIGluIHdpdGggeW91ciBFdGhlcmV1bSBhY2NvdW50OlwiO1xudmFyIFVSSV9UQUcgPSBcIlVSSTogXCI7XG52YXIgVkVSU0lPTl9UQUcgPSBcIlZlcnNpb246IFwiO1xudmFyIENIQUlOX1RBRyA9IFwiQ2hhaW4gSUQ6IFwiO1xudmFyIE5PTkNFX1RBRyA9IFwiTm9uY2U6IFwiO1xudmFyIElBVF9UQUcgPSBcIklzc3VlZCBBdDogXCI7XG52YXIgRVhQX1RBRyA9IFwiRXhwaXJhdGlvbiBUaW1lOiBcIjtcbnZhciBOQkZfVEFHID0gXCJOb3QgQmVmb3JlOiBcIjtcbnZhciBSSURfVEFHID0gXCJSZXF1ZXN0IElEOiBcIjtcbnZhciBFUkNfMTkxX1BSRUZJWCA9IFwiXHUwMDE5RXRoZXJldW0gU2lnbmVkIE1lc3NhZ2U6XFxuXCI7XG52YXIgdGFnZ2VkID0gKGxpbmUsIHRhZykgPT4ge1xuICBpZiAobGluZSAmJiBsaW5lLmluY2x1ZGVzKHRhZykpIHtcbiAgICByZXR1cm4gbGluZS5yZXBsYWNlKHRhZywgXCJcIik7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBNaXNzaW5nICcke3RhZ30nYCk7XG4gIH1cbn07XG52YXIgcGFyc2VTaXdlTWVzc2FnZSA9IChpbnB1dFN0cmluZykgPT4ge1xuICBjb25zdCBsaW5lcyA9IGlucHV0U3RyaW5nLnNwbGl0KFwiXFxuXCIpW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgY29uc3QgZG9tYWluID0gdGFnZ2VkKGxpbmVzLm5leHQoKT8udmFsdWUsIFBSRUFNQkxFKTtcbiAgY29uc3QgYWRkcmVzcyA9IGxpbmVzLm5leHQoKT8udmFsdWU7XG4gIGxpbmVzLm5leHQoKTtcbiAgY29uc3QgbmV4dFZhbHVlID0gbGluZXMubmV4dCgpPy52YWx1ZTtcbiAgbGV0IHN0YXRlbWVudDtcbiAgaWYgKG5leHRWYWx1ZSkge1xuICAgIHN0YXRlbWVudCA9IG5leHRWYWx1ZTtcbiAgICBsaW5lcy5uZXh0KCk7XG4gIH1cbiAgY29uc3QgdXJpID0gdGFnZ2VkKGxpbmVzLm5leHQoKT8udmFsdWUsIFVSSV9UQUcpO1xuICBjb25zdCB2ZXJzaW9uID0gdGFnZ2VkKGxpbmVzLm5leHQoKT8udmFsdWUsIFZFUlNJT05fVEFHKTtcbiAgY29uc3QgY2hhaW5faWQgPSB0YWdnZWQobGluZXMubmV4dCgpPy52YWx1ZSwgQ0hBSU5fVEFHKTtcbiAgY29uc3Qgbm9uY2UgPSB0YWdnZWQobGluZXMubmV4dCgpPy52YWx1ZSwgTk9OQ0VfVEFHKTtcbiAgY29uc3QgaXNzdWVkX2F0ID0gdGFnZ2VkKGxpbmVzLm5leHQoKT8udmFsdWUsIElBVF9UQUcpO1xuICBsZXQgZXhwaXJhdGlvbl90aW1lLCBub3RfYmVmb3JlLCByZXF1ZXN0X2lkO1xuICBmb3IgKGxldCBsaW5lIG9mIGxpbmVzKSB7XG4gICAgaWYgKGxpbmUuc3RhcnRzV2l0aChFWFBfVEFHKSkge1xuICAgICAgZXhwaXJhdGlvbl90aW1lID0gdGFnZ2VkKGxpbmUsIEVYUF9UQUcpO1xuICAgIH0gZWxzZSBpZiAobGluZS5zdGFydHNXaXRoKE5CRl9UQUcpKSB7XG4gICAgICBub3RfYmVmb3JlID0gdGFnZ2VkKGxpbmUsIE5CRl9UQUcpO1xuICAgIH0gZWxzZSBpZiAobGluZS5zdGFydHNXaXRoKFJJRF9UQUcpKSB7XG4gICAgICByZXF1ZXN0X2lkID0gdGFnZ2VkKGxpbmUsIFJJRF9UQUcpO1xuICAgIH1cbiAgfVxuICBpZiAobGluZXMubmV4dCgpLmRvbmUgPT09IGZhbHNlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiRXh0cmEgbGluZXMgaW4gdGhlIGlucHV0XCIpO1xuICB9XG4gIGNvbnN0IHNpd2VNZXNzYWdlRGF0YSA9IHtcbiAgICBkb21haW4sXG4gICAgYWRkcmVzcyxcbiAgICBzdGF0ZW1lbnQsXG4gICAgdXJpLFxuICAgIHZlcnNpb24sXG4gICAgY2hhaW5faWQsXG4gICAgbm9uY2UsXG4gICAgaXNzdWVkX2F0LFxuICAgIGV4cGlyYXRpb25fdGltZSxcbiAgICBub3RfYmVmb3JlLFxuICAgIHJlcXVlc3RfaWRcbiAgfTtcbiAgcmV0dXJuIHNpd2VNZXNzYWdlRGF0YTtcbn07XG52YXIgZ2VuZXJhdGVTaXdlTWVzc2FnZSA9IChzaXdlTWVzc2FnZURhdGEpID0+IHtcbiAgbGV0IHNpd2VNZXNzYWdlID0gXCJcIjtcbiAgaWYgKHNpd2VNZXNzYWdlRGF0YS5zY2hlbWUpIHtcbiAgICBzaXdlTWVzc2FnZSArPSBgJHtzaXdlTWVzc2FnZURhdGEuc2NoZW1lfTovLyR7c2l3ZU1lc3NhZ2VEYXRhLmRvbWFpbn0gd2FudHMgeW91IHRvIHNpZ24gaW4gd2l0aCB5b3VyIEV0aGVyZXVtIGFjY291bnQ6XG5gO1xuICB9IGVsc2Uge1xuICAgIHNpd2VNZXNzYWdlICs9IGAke3Npd2VNZXNzYWdlRGF0YS5kb21haW59IHdhbnRzIHlvdSB0byBzaWduIGluIHdpdGggeW91ciBFdGhlcmV1bSBhY2NvdW50OlxuYDtcbiAgfVxuICBpZiAoc2l3ZU1lc3NhZ2VEYXRhLmFkZHJlc3MpIHtcbiAgICBzaXdlTWVzc2FnZSArPSBgJHtzaXdlTWVzc2FnZURhdGEuYWRkcmVzc31cbmA7XG4gIH0gZWxzZSB7XG4gICAgc2l3ZU1lc3NhZ2UgKz0gXCJ7YWRkcmVzc31cXG5cIjtcbiAgfVxuICBzaXdlTWVzc2FnZSArPSBcIlxcblwiO1xuICBpZiAoc2l3ZU1lc3NhZ2VEYXRhLnN0YXRlbWVudCkge1xuICAgIHNpd2VNZXNzYWdlICs9IGAke3Npd2VNZXNzYWdlRGF0YS5zdGF0ZW1lbnR9XG5gO1xuICB9XG4gIHNpd2VNZXNzYWdlICs9IFwiXFxuXCI7XG4gIHNpd2VNZXNzYWdlICs9IGBVUkk6ICR7c2l3ZU1lc3NhZ2VEYXRhLnVyaX1cbmA7XG4gIHNpd2VNZXNzYWdlICs9IGBWZXJzaW9uOiAke3Npd2VNZXNzYWdlRGF0YS52ZXJzaW9ufVxuYDtcbiAgc2l3ZU1lc3NhZ2UgKz0gYENoYWluIElEOiAke3Npd2VNZXNzYWdlRGF0YS5jaGFpbl9pZH1cbmA7XG4gIHNpd2VNZXNzYWdlICs9IGBOb25jZTogJHtzaXdlTWVzc2FnZURhdGEubm9uY2V9XG5gO1xuICBzaXdlTWVzc2FnZSArPSBgSXNzdWVkIEF0OiAke3Npd2VNZXNzYWdlRGF0YS5pc3N1ZWRfYXR9XG5gO1xuICBpZiAoc2l3ZU1lc3NhZ2VEYXRhLmV4cGlyYXRpb25fdGltZSkge1xuICAgIHNpd2VNZXNzYWdlICs9IGBFeHBpcmF0aW9uIFRpbWU6ICR7c2l3ZU1lc3NhZ2VEYXRhLmV4cGlyYXRpb25fdGltZX1cbmA7XG4gIH1cbiAgaWYgKHNpd2VNZXNzYWdlRGF0YS5ub3RfYmVmb3JlKSB7XG4gICAgc2l3ZU1lc3NhZ2UgKz0gYE5vdCBCZWZvcmU6ICR7c2l3ZU1lc3NhZ2VEYXRhLm5vdF9iZWZvcmV9XG5gO1xuICB9XG4gIGlmIChzaXdlTWVzc2FnZURhdGEucmVxdWVzdF9pZCkge1xuICAgIHNpd2VNZXNzYWdlICs9IGBSZXF1ZXN0IElEOiAke3Npd2VNZXNzYWdlRGF0YS5yZXF1ZXN0X2lkfVxuYDtcbiAgfVxuICByZXR1cm4gc2l3ZU1lc3NhZ2U7XG59O1xudmFyIFNBRkVfQ09OVFJBQ1RfQUJJID0gW1xuICB7XG4gICAgbmFtZTogXCJjaGVja1NpZ25hdHVyZXNcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICBpbnB1dHM6IFtcbiAgICAgIHsgbmFtZTogXCJkYXRhSGFzaFwiLCB0eXBlOiBcImJ5dGVzMzJcIiB9LFxuICAgICAgeyBuYW1lOiBcImRhdGFcIiwgdHlwZTogXCJieXRlc1wiIH0sXG4gICAgICB7IG5hbWU6IFwic2lnbmF0dXJlXCIsIHR5cGU6IFwiYnl0ZXNcIiB9XG4gICAgXSxcbiAgICBvdXRwdXRzOiBbXVxuICB9XG5dO1xudmFyIHZlcmlmeVNpd2VNZXNzYWdlID0gYXN5bmMgKHBheWxvYWQsIG5vbmNlLCBzdGF0ZW1lbnQsIHJlcXVlc3RJZCwgdXNlclByb3ZpZGVyKSA9PiB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVmVyaWZ5IGNhbiBvbmx5IGJlIGNhbGxlZCBpbiB0aGUgYmFja2VuZFwiKTtcbiAgfVxuICBjb25zdCB7IG1lc3NhZ2UsIHNpZ25hdHVyZSwgYWRkcmVzcyB9ID0gcGF5bG9hZDtcbiAgY29uc3Qgc2l3ZU1lc3NhZ2VEYXRhID0gcGFyc2VTaXdlTWVzc2FnZShtZXNzYWdlKTtcbiAgaWYgKHNpd2VNZXNzYWdlRGF0YS5leHBpcmF0aW9uX3RpbWUpIHtcbiAgICBjb25zdCBleHBpcmF0aW9uVGltZSA9IG5ldyBEYXRlKHNpd2VNZXNzYWdlRGF0YS5leHBpcmF0aW9uX3RpbWUpO1xuICAgIGlmIChleHBpcmF0aW9uVGltZSA8IC8qIEBfX1BVUkVfXyAqLyBuZXcgRGF0ZSgpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFeHBpcmVkIG1lc3NhZ2VcIik7XG4gICAgfVxuICB9XG4gIGlmIChzaXdlTWVzc2FnZURhdGEubm90X2JlZm9yZSkge1xuICAgIGNvbnN0IG5vdEJlZm9yZSA9IG5ldyBEYXRlKHNpd2VNZXNzYWdlRGF0YS5ub3RfYmVmb3JlKTtcbiAgICBpZiAobm90QmVmb3JlID4gLyogQF9fUFVSRV9fICovIG5ldyBEYXRlKCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBCZWZvcmUgdGltZSBoYXMgbm90IHBhc3NlZFwiKTtcbiAgICB9XG4gIH1cbiAgaWYgKG5vbmNlICYmIHNpd2VNZXNzYWdlRGF0YS5ub25jZSAhPT0gbm9uY2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgTm9uY2UgbWlzbWF0Y2guIEdvdDogJHtzaXdlTWVzc2FnZURhdGEubm9uY2V9LCBFeHBlY3RlZDogJHtub25jZX1gXG4gICAgKTtcbiAgfVxuICBpZiAoc3RhdGVtZW50ICYmIHNpd2VNZXNzYWdlRGF0YS5zdGF0ZW1lbnQgIT09IHN0YXRlbWVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBTdGF0ZW1lbnQgbWlzbWF0Y2guIEdvdDogJHtzaXdlTWVzc2FnZURhdGEuc3RhdGVtZW50fSwgRXhwZWN0ZWQ6ICR7c3RhdGVtZW50fWBcbiAgICApO1xuICB9XG4gIGlmIChyZXF1ZXN0SWQgJiYgc2l3ZU1lc3NhZ2VEYXRhLnJlcXVlc3RfaWQgIT09IHJlcXVlc3RJZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBSZXF1ZXN0IElEIG1pc21hdGNoLiBHb3Q6ICR7c2l3ZU1lc3NhZ2VEYXRhLnJlcXVlc3RfaWR9LCBFeHBlY3RlZDogJHtyZXF1ZXN0SWR9YFxuICAgICk7XG4gIH1cbiAgbGV0IHByb3ZpZGVyID0gdXNlclByb3ZpZGVyIHx8IGNyZWF0ZVB1YmxpY0NsaWVudCh7IGNoYWluOiBvcHRpbWlzbSwgdHJhbnNwb3J0OiBodHRwKCkgfSk7XG4gIGNvbnN0IHNpZ25lZE1lc3NhZ2UgPSBgJHtFUkNfMTkxX1BSRUZJWH0ke21lc3NhZ2UubGVuZ3RofSR7bWVzc2FnZX1gO1xuICBjb25zdCBtZXNzYWdlQnl0ZXMgPSBCdWZmZXIuZnJvbShzaWduZWRNZXNzYWdlLCBcInV0ZjhcIikudG9TdHJpbmcoXCJoZXhcIik7XG4gIGNvbnN0IGhhc2hlZE1lc3NhZ2UgPSBoYXNoTWVzc2FnZShzaWduZWRNZXNzYWdlKTtcbiAgY29uc3QgY29udHJhY3QgPSBnZXRDb250cmFjdCh7XG4gICAgYWRkcmVzcyxcbiAgICBhYmk6IFNBRkVfQ09OVFJBQ1RfQUJJLFxuICAgIGNsaWVudDogcHJvdmlkZXJcbiAgfSk7XG4gIHRyeSB7XG4gICAgYXdhaXQgY29udHJhY3QucmVhZC5jaGVja1NpZ25hdHVyZXMoW1xuICAgICAgaGFzaGVkTWVzc2FnZSxcbiAgICAgIGAweCR7bWVzc2FnZUJ5dGVzfWAsXG4gICAgICBgMHgke3NpZ25hdHVyZX1gXG4gICAgXSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiU2lnbmF0dXJlIHZlcmlmaWNhdGlvbiBmYWlsZWRcIik7XG4gIH1cbiAgcmV0dXJuIHsgaXNWYWxpZDogdHJ1ZSwgc2l3ZU1lc3NhZ2VEYXRhIH07XG59O1xuXG4vLyBoZWxwZXJzL3BheW1lbnQvY2xpZW50LnRzXG52YXIgdG9rZW5Ub0RlY2ltYWxzID0gKGFtb3VudCwgdG9rZW4pID0+IHtcbiAgY29uc3QgZGVjaW1hbHMgPSBUb2tlbkRlY2ltYWxzW3Rva2VuXTtcbiAgaWYgKGRlY2ltYWxzID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdG9rZW46ICR7dG9rZW59YCk7XG4gIH1cbiAgY29uc3QgZmFjdG9yID0gMTAgKiogZGVjaW1hbHM7XG4gIGNvbnN0IHJlc3VsdCA9IGFtb3VudCAqIGZhY3RvcjtcbiAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKHJlc3VsdCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSByZXN1bHRpbmcgYW1vdW50IGlzIG5vdCBhIHdob2xlIG51bWJlcjogJHtyZXN1bHR9YCk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgdmFsaWRhdGVQYXltZW50UGF5bG9hZCA9IChwYXlsb2FkKSA9PiB7XG4gIGlmIChwYXlsb2FkLnRva2Vucy5zb21lKFxuICAgICh0b2tlbikgPT4gdG9rZW4uc3ltYm9sID09IFwiVVNEQ0VcIiAmJiBwYXJzZUZsb2F0KHRva2VuLnRva2VuX2Ftb3VudCkgPCAwLjFcbiAgKSkge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJVU0RDRSBhbW91bnQgc2hvdWxkIGJlIGdyZWF0ZXIgdGhhbiAkMC4xXCIpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAocGF5bG9hZC5yZWZlcmVuY2UubGVuZ3RoID4gMzYpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiUmVmZXJlbmNlIG11c3Qgbm90IGV4Y2VlZCAzNiBjaGFyYWN0ZXJzXCIpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn07XG5cbi8vIGhlbHBlcnMvdXNlcm5hbWVzL2luZGV4LnRzXG52YXIgZ2V0VXNlclByb2ZpbGUgPSBhc3luYyAoYWRkcmVzcykgPT4ge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vdXNlcm5hbWVzLndvcmxkY29pbi5vcmcvYXBpL3YxL3F1ZXJ5XCIsIHtcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfSxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICBhZGRyZXNzZXM6IFthZGRyZXNzXVxuICAgIH0pXG4gIH0pO1xuICBjb25zdCB1c2VybmFtZXMgPSBhd2FpdCByZXMuanNvbigpO1xuICByZXR1cm4gdXNlcm5hbWVzWzBdID8/IHsgdXNlcm5hbWU6IG51bGwsIHByb2ZpbGVQaWN0dXJlVXJsOiBudWxsIH07XG59O1xuXG4vLyBtaW5pa2l0LnRzXG52YXIgc2VuZE1pbmlLaXRFdmVudCA9IChwYXlsb2FkKSA9PiB7XG4gIHNlbmRXZWJ2aWV3RXZlbnQocGF5bG9hZCk7XG59O1xudmFyIF9NaW5pS2l0ID0gY2xhc3MgX01pbmlLaXQge1xuICBzdGF0aWMgc2VuZEluaXQoKSB7XG4gICAgc2VuZFdlYnZpZXdFdmVudCh7XG4gICAgICBjb21tYW5kOiBcImluaXRcIixcbiAgICAgIHBheWxvYWQ6IHsgdmVyc2lvbjogdGhpcy5NSU5JS0lUX1ZFUlNJT04gfVxuICAgIH0pO1xuICB9XG4gIHN0YXRpYyBzdWJzY3JpYmUoZXZlbnQsIGhhbmRsZXIpIHtcbiAgICBpZiAoZXZlbnQgPT09IFwibWluaWFwcC13YWxsZXQtYXV0aFwiIC8qIE1pbmlBcHBXYWxsZXRBdXRoICovKSB7XG4gICAgICBjb25zdCBvcmlnaW5hbEhhbmRsZXIgPSBoYW5kbGVyO1xuICAgICAgY29uc3Qgd3JhcHBlZEhhbmRsZXIgPSAocGF5bG9hZCkgPT4ge1xuICAgICAgICBpZiAocGF5bG9hZC5zdGF0dXMgPT09IFwic3VjY2Vzc1wiKSB7XG4gICAgICAgICAgX01pbmlLaXQud2FsbGV0QWRkcmVzcyA9IHBheWxvYWQuYWRkcmVzcztcbiAgICAgICAgICBnZXRVc2VyUHJvZmlsZShwYXlsb2FkLmFkZHJlc3MpLnRoZW4oKHF1ZXJ5UmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgIF9NaW5pS2l0LnVzZXIgPSB7XG4gICAgICAgICAgICAgIHVzZXJuYW1lOiBxdWVyeVJlc3BvbnNlLnVzZXJuYW1lLFxuICAgICAgICAgICAgICBwcm9maWxlUGljdHVyZVVybDogcXVlcnlSZXNwb25zZS5wcm9maWxlUGljdHVyZVVybCxcbiAgICAgICAgICAgICAgd2FsbGV0QWRkcmVzczogcGF5bG9hZC5hZGRyZXNzXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIG9yaWdpbmFsSGFuZGxlcihwYXlsb2FkKTtcbiAgICAgIH07XG4gICAgICB0aGlzLmxpc3RlbmVyc1tldmVudF0gPSB3cmFwcGVkSGFuZGxlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5saXN0ZW5lcnNbZXZlbnRdID0gaGFuZGxlcjtcbiAgICB9XG4gIH1cbiAgc3RhdGljIHVuc3Vic2NyaWJlKGV2ZW50KSB7XG4gICAgZGVsZXRlIHRoaXMubGlzdGVuZXJzW2V2ZW50XTtcbiAgfVxuICBzdGF0aWMgdHJpZ2dlcihldmVudCwgcGF5bG9hZCkge1xuICAgIGlmICghdGhpcy5saXN0ZW5lcnNbZXZlbnRdKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBObyBoYW5kbGVyIGZvciBldmVudCAke2V2ZW50fWApO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmxpc3RlbmVyc1tldmVudF0ocGF5bG9hZCk7XG4gIH1cbiAgc3RhdGljIGFzeW5jIGF3YWl0Q29tbWFuZChldmVudCwgY29tbWFuZCwgZXhlY3V0b3IpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIGxldCBjb21tYW5kUGF5bG9hZCA9IG51bGw7XG4gICAgICBjb25zdCBoYW5kbGVBbmRVbnN1YnNjcmliZSA9IChwYXlsb2FkKSA9PiB7XG4gICAgICAgIHRoaXMudW5zdWJzY3JpYmUoZXZlbnQpO1xuICAgICAgICByZXNvbHZlKHsgY29tbWFuZFBheWxvYWQsIGZpbmFsUGF5bG9hZDogcGF5bG9hZCB9KTtcbiAgICAgIH07XG4gICAgICB0aGlzLnN1YnNjcmliZShldmVudCwgaGFuZGxlQW5kVW5zdWJzY3JpYmUpO1xuICAgICAgY29tbWFuZFBheWxvYWQgPSBleGVjdXRvcigpO1xuICAgIH0pO1xuICB9XG4gIHN0YXRpYyBjb21tYW5kc1ZhbGlkKGlucHV0KSB7XG4gICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKHRoaXMuY29tbWFuZFZlcnNpb24pLmV2ZXJ5KFxuICAgICAgKFtjb21tYW5kTmFtZSwgdmVyc2lvbl0pID0+IHtcbiAgICAgICAgY29uc3QgY29tbWFuZElucHV0ID0gaW5wdXQuZmluZChcbiAgICAgICAgICAoY29tbWFuZCkgPT4gY29tbWFuZC5uYW1lID09PSBjb21tYW5kTmFtZVxuICAgICAgICApO1xuICAgICAgICBpZiAoIWNvbW1hbmRJbnB1dCkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICAgICBgQ29tbWFuZCAke2NvbW1hbmROYW1lfSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBhcHAuIFRyeSB1cGRhdGluZyB0aGUgYXBwIHZlcnNpb25gXG4gICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfTWluaUtpdC5pc0NvbW1hbmRBdmFpbGFibGVbY29tbWFuZE5hbWVdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY29tbWFuZElucHV0ID8gY29tbWFuZElucHV0LnN1cHBvcnRlZF92ZXJzaW9ucy5pbmNsdWRlcyh2ZXJzaW9uKSA6IGZhbHNlO1xuICAgICAgfVxuICAgICk7XG4gIH1cbiAgc3RhdGljIGluc3RhbGwoYXBwSWQpIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIiB8fCBCb29sZWFuKHdpbmRvdy5NaW5pS2l0KSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yQ29kZTogXCJhbHJlYWR5X2luc3RhbGxlZFwiIC8qIEFscmVhZHlJbnN0YWxsZWQgKi8sXG4gICAgICAgIGVycm9yTWVzc2FnZTogTWluaUtpdEluc3RhbGxFcnJvck1lc3NhZ2VbXCJhbHJlYWR5X2luc3RhbGxlZFwiIC8qIEFscmVhZHlJbnN0YWxsZWQgKi9dXG4gICAgICB9O1xuICAgIH1cbiAgICBpZiAoIWFwcElkKSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJBcHAgSUQgbm90IHByb3ZpZGVkIGR1cmluZyBpbnN0YWxsXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBfTWluaUtpdC5hcHBJZCA9IGFwcElkO1xuICAgIH1cbiAgICBpZiAoIXdpbmRvdy5Xb3JsZEFwcCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yQ29kZTogXCJvdXRzaWRlX29mX3dvcmxkYXBwXCIgLyogT3V0c2lkZU9mV29ybGRBcHAgKi8sXG4gICAgICAgIGVycm9yTWVzc2FnZTogTWluaUtpdEluc3RhbGxFcnJvck1lc3NhZ2VbXCJvdXRzaWRlX29mX3dvcmxkYXBwXCIgLyogT3V0c2lkZU9mV29ybGRBcHAgKi9dXG4gICAgICB9O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgd2luZG93Lk1pbmlLaXQgPSBfTWluaUtpdDtcbiAgICAgIHRoaXMuc2VuZEluaXQoKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgTWluaUtpdEluc3RhbGxFcnJvck1lc3NhZ2VbXCJ1bmtub3duXCIgLyogVW5rbm93biAqL10sXG4gICAgICAgIGVycm9yXG4gICAgICApO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yQ29kZTogXCJ1bmtub3duXCIgLyogVW5rbm93biAqLyxcbiAgICAgICAgZXJyb3JNZXNzYWdlOiBNaW5pS2l0SW5zdGFsbEVycm9yTWVzc2FnZVtcInVua25vd25cIiAvKiBVbmtub3duICovXVxuICAgICAgfTtcbiAgICB9XG4gICAgaWYgKCF0aGlzLmNvbW1hbmRzVmFsaWQod2luZG93LldvcmxkQXBwLnN1cHBvcnRlZF9jb21tYW5kcykpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvckNvZGU6IFwiYXBwX291dF9vZl9kYXRlXCIgLyogQXBwT3V0T2ZEYXRlICovLFxuICAgICAgICBlcnJvck1lc3NhZ2U6IE1pbmlLaXRJbnN0YWxsRXJyb3JNZXNzYWdlW1wiYXBwX291dF9vZl9kYXRlXCIgLyogQXBwT3V0T2ZEYXRlICovXVxuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSB9O1xuICB9XG4gIHN0YXRpYyBpc0luc3RhbGxlZChkZWJ1Zykge1xuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2coXCJNaW5pS2l0IGlzIGFsaXZlIVwiKTtcbiAgICBjb25zdCBpc0luc3RhbGxlZCA9IEJvb2xlYW4od2luZG93Lk1pbmlLaXQpO1xuICAgIGlmICghaXNJbnN0YWxsZWQpXG4gICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICBcIk1pbmlLaXQgaXMgbm90IGluc3RhbGxlZC4gTWFrZSBzdXJlIHlvdSdyZSBydW5uaW5nIHRoZSBhcHBsaWNhdGlvbiBpbnNpZGUgb2YgV29ybGQgQXBwXCJcbiAgICAgICk7XG4gICAgcmV0dXJuIGlzSW5zdGFsbGVkO1xuICB9XG59O1xuX01pbmlLaXQuTUlOSUtJVF9WRVJTSU9OID0gMTtcbl9NaW5pS2l0LmNvbW1hbmRWZXJzaW9uID0ge1xuICBbXCJ2ZXJpZnlcIiAvKiBWZXJpZnkgKi9dOiAxLFxuICBbXCJwYXlcIiAvKiBQYXkgKi9dOiAxLFxuICBbXCJ3YWxsZXQtYXV0aFwiIC8qIFdhbGxldEF1dGggKi9dOiAxLFxuICBbXCJzZW5kLXRyYW5zYWN0aW9uXCIgLyogU2VuZFRyYW5zYWN0aW9uICovXTogMSxcbiAgW1wic2lnbi1tZXNzYWdlXCIgLyogU2lnbk1lc3NhZ2UgKi9dOiAxLFxuICBbXCJzaWduLXR5cGVkLWRhdGFcIiAvKiBTaWduVHlwZWREYXRhICovXTogMSxcbiAgW1wic2hhcmUtY29udGFjdHNcIiAvKiBTaGFyZUNvbnRhY3RzICovXTogMVxufTtcbl9NaW5pS2l0LmlzQ29tbWFuZEF2YWlsYWJsZSA9IHtcbiAgW1widmVyaWZ5XCIgLyogVmVyaWZ5ICovXTogZmFsc2UsXG4gIFtcInBheVwiIC8qIFBheSAqL106IGZhbHNlLFxuICBbXCJ3YWxsZXQtYXV0aFwiIC8qIFdhbGxldEF1dGggKi9dOiBmYWxzZSxcbiAgW1wic2VuZC10cmFuc2FjdGlvblwiIC8qIFNlbmRUcmFuc2FjdGlvbiAqL106IGZhbHNlLFxuICBbXCJzaWduLW1lc3NhZ2VcIiAvKiBTaWduTWVzc2FnZSAqL106IGZhbHNlLFxuICBbXCJzaWduLXR5cGVkLWRhdGFcIiAvKiBTaWduVHlwZWREYXRhICovXTogZmFsc2UsXG4gIFtcInNoYXJlLWNvbnRhY3RzXCIgLyogU2hhcmVDb250YWN0cyAqL106IGZhbHNlXG59O1xuX01pbmlLaXQubGlzdGVuZXJzID0ge1xuICBbXCJtaW5pYXBwLXZlcmlmeS1hY3Rpb25cIiAvKiBNaW5pQXBwVmVyaWZ5QWN0aW9uICovXTogKCkgPT4ge1xuICB9LFxuICBbXCJtaW5pYXBwLXBheW1lbnRcIiAvKiBNaW5pQXBwUGF5bWVudCAqL106ICgpID0+IHtcbiAgfSxcbiAgW1wibWluaWFwcC13YWxsZXQtYXV0aFwiIC8qIE1pbmlBcHBXYWxsZXRBdXRoICovXTogKCkgPT4ge1xuICB9LFxuICBbXCJtaW5pYXBwLXNlbmQtdHJhbnNhY3Rpb25cIiAvKiBNaW5pQXBwU2VuZFRyYW5zYWN0aW9uICovXTogKCkgPT4ge1xuICB9LFxuICBbXCJtaW5pYXBwLXNpZ24tbWVzc2FnZVwiIC8qIE1pbmlBcHBTaWduTWVzc2FnZSAqL106ICgpID0+IHtcbiAgfSxcbiAgW1wibWluaWFwcC1zaWduLXR5cGVkLWRhdGFcIiAvKiBNaW5pQXBwU2lnblR5cGVkRGF0YSAqL106ICgpID0+IHtcbiAgfSxcbiAgW1wibWluaWFwcC1zaGFyZS1jb250YWN0c1wiIC8qIE1pbmlBcHBTaGFyZUNvbnRhY3RzICovXTogKCkgPT4ge1xuICB9XG59O1xuX01pbmlLaXQuYXBwSWQgPSBudWxsO1xuX01pbmlLaXQud2FsbGV0QWRkcmVzcyA9IG51bGw7XG5fTWluaUtpdC51c2VyID0gbnVsbDtcbl9NaW5pS2l0LmNvbW1hbmRzID0ge1xuICB2ZXJpZnk6IChwYXlsb2FkKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgfHwgIV9NaW5pS2l0LmlzQ29tbWFuZEF2YWlsYWJsZVtcInZlcmlmeVwiIC8qIFZlcmlmeSAqL10pIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgIFwiJ3ZlcmlmeScgY29tbWFuZCBpcyB1bmF2YWlsYWJsZS4gQ2hlY2sgTWluaUtpdC5pbnN0YWxsKCkgb3IgdXBkYXRlIHRoZSBhcHAgdmVyc2lvblwiXG4gICAgICApO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IHRpbWVzdGFtcCA9ICgvKiBAX19QVVJFX18gKi8gbmV3IERhdGUoKSkudG9JU09TdHJpbmcoKTtcbiAgICBjb25zdCBldmVudFBheWxvYWQgPSB7XG4gICAgICBhY3Rpb246IGVuY29kZUFjdGlvbihwYXlsb2FkLmFjdGlvbiksXG4gICAgICBzaWduYWw6IGdlbmVyYXRlU2lnbmFsKHBheWxvYWQuc2lnbmFsKS5kaWdlc3QsXG4gICAgICB2ZXJpZmljYXRpb25fbGV2ZWw6IHBheWxvYWQudmVyaWZpY2F0aW9uX2xldmVsIHx8IFZlcmlmaWNhdGlvbkxldmVsLk9yYixcbiAgICAgIHRpbWVzdGFtcFxuICAgIH07XG4gICAgc2VuZE1pbmlLaXRFdmVudCh7XG4gICAgICBjb21tYW5kOiBcInZlcmlmeVwiIC8qIFZlcmlmeSAqLyxcbiAgICAgIHZlcnNpb246IF9NaW5pS2l0LmNvbW1hbmRWZXJzaW9uW1widmVyaWZ5XCIgLyogVmVyaWZ5ICovXSxcbiAgICAgIHBheWxvYWQ6IGV2ZW50UGF5bG9hZFxuICAgIH0pO1xuICAgIHJldHVybiBldmVudFBheWxvYWQ7XG4gIH0sXG4gIHBheTogKHBheWxvYWQpID0+IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhX01pbmlLaXQuaXNDb21tYW5kQXZhaWxhYmxlW1wicGF5XCIgLyogUGF5ICovXSkge1xuICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgXCIncGF5JyBjb21tYW5kIGlzIHVuYXZhaWxhYmxlLiBDaGVjayBNaW5pS2l0Lmluc3RhbGwoKSBvciB1cGRhdGUgdGhlIGFwcCB2ZXJzaW9uXCJcbiAgICAgICk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaWYgKCF2YWxpZGF0ZVBheW1lbnRQYXlsb2FkKHBheWxvYWQpKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgbmV0d29yayA9IFwid29ybGRjaGFpblwiIC8qIFdvcmxkQ2hhaW4gKi87XG4gICAgY29uc3QgZXZlbnRQYXlsb2FkID0ge1xuICAgICAgLi4ucGF5bG9hZCxcbiAgICAgIG5ldHdvcmtcbiAgICB9O1xuICAgIHNlbmRNaW5pS2l0RXZlbnQoe1xuICAgICAgY29tbWFuZDogXCJwYXlcIiAvKiBQYXkgKi8sXG4gICAgICB2ZXJzaW9uOiBfTWluaUtpdC5jb21tYW5kVmVyc2lvbltcInBheVwiIC8qIFBheSAqL10sXG4gICAgICBwYXlsb2FkOiBldmVudFBheWxvYWRcbiAgICB9KTtcbiAgICByZXR1cm4gZXZlbnRQYXlsb2FkO1xuICB9LFxuICB3YWxsZXRBdXRoOiAocGF5bG9hZCkgPT4ge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiIHx8ICFfTWluaUtpdC5pc0NvbW1hbmRBdmFpbGFibGVbXCJ3YWxsZXQtYXV0aFwiIC8qIFdhbGxldEF1dGggKi9dKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICBcIid3YWxsZXRBdXRoJyBjb21tYW5kIGlzIHVuYXZhaWxhYmxlLiBDaGVjayBNaW5pS2l0Lmluc3RhbGwoKSBvciB1cGRhdGUgdGhlIGFwcCB2ZXJzaW9uXCJcbiAgICAgICk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgdmFsaWRhdGlvblJlc3VsdCA9IHZhbGlkYXRlV2FsbGV0QXV0aENvbW1hbmRJbnB1dChwYXlsb2FkKTtcbiAgICBpZiAoIXZhbGlkYXRpb25SZXN1bHQudmFsaWQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgIFwiRmFpbGVkIHRvIHZhbGlkYXRlIHdhbGxldCBhdXRoIGlucHV0OlxcblxcbiAtLT5cIixcbiAgICAgICAgdmFsaWRhdGlvblJlc3VsdC5tZXNzYWdlXG4gICAgICApO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGxldCBwcm90b2NvbCA9IG51bGw7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGN1cnJlbnRVcmwgPSBuZXcgVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgICAgIHByb3RvY29sID0gY3VycmVudFVybC5wcm90b2NvbC5zcGxpdChcIjpcIilbMF07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZ2V0IGN1cnJlbnQgVVJMXCIsIGVycm9yKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBjb25zdCBzaXdlTWVzc2FnZSA9IGdlbmVyYXRlU2l3ZU1lc3NhZ2Uoe1xuICAgICAgc2NoZW1lOiBwcm90b2NvbCxcbiAgICAgIGRvbWFpbjogd2luZG93LmxvY2F0aW9uLmhvc3QsXG4gICAgICBzdGF0ZW1lbnQ6IHBheWxvYWQuc3RhdGVtZW50ID8/IHZvaWQgMCxcbiAgICAgIHVyaTogd2luZG93LmxvY2F0aW9uLmhyZWYsXG4gICAgICB2ZXJzaW9uOiAxLFxuICAgICAgY2hhaW5faWQ6IDEwLFxuICAgICAgbm9uY2U6IHBheWxvYWQubm9uY2UsXG4gICAgICBpc3N1ZWRfYXQ6ICgvKiBAX19QVVJFX18gKi8gbmV3IERhdGUoKSkudG9JU09TdHJpbmcoKSxcbiAgICAgIGV4cGlyYXRpb25fdGltZTogcGF5bG9hZC5leHBpcmF0aW9uVGltZT8udG9JU09TdHJpbmcoKSA/PyB2b2lkIDAsXG4gICAgICBub3RfYmVmb3JlOiBwYXlsb2FkLm5vdEJlZm9yZT8udG9JU09TdHJpbmcoKSA/PyB2b2lkIDAsXG4gICAgICByZXF1ZXN0X2lkOiBwYXlsb2FkLnJlcXVlc3RJZCA/PyB2b2lkIDBcbiAgICB9KTtcbiAgICBjb25zdCB3YWxsZXRBdXRoUGF5bG9hZCA9IHsgc2l3ZU1lc3NhZ2UgfTtcbiAgICBzZW5kTWluaUtpdEV2ZW50KHtcbiAgICAgIGNvbW1hbmQ6IFwid2FsbGV0LWF1dGhcIiAvKiBXYWxsZXRBdXRoICovLFxuICAgICAgdmVyc2lvbjogX01pbmlLaXQuY29tbWFuZFZlcnNpb25bXCJ3YWxsZXQtYXV0aFwiIC8qIFdhbGxldEF1dGggKi9dLFxuICAgICAgcGF5bG9hZDogd2FsbGV0QXV0aFBheWxvYWRcbiAgICB9KTtcbiAgICByZXR1cm4gd2FsbGV0QXV0aFBheWxvYWQ7XG4gIH0sXG4gIHNlbmRUcmFuc2FjdGlvbjogKHBheWxvYWQpID0+IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhX01pbmlLaXQuaXNDb21tYW5kQXZhaWxhYmxlW1wic2VuZC10cmFuc2FjdGlvblwiIC8qIFNlbmRUcmFuc2FjdGlvbiAqL10pIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgIFwiJ3NlbmRUcmFuc2FjdGlvbicgY29tbWFuZCBpcyB1bmF2YWlsYWJsZS4gQ2hlY2sgTWluaUtpdC5pbnN0YWxsKCkgb3IgdXBkYXRlIHRoZSBhcHAgdmVyc2lvblwiXG4gICAgICApO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHNlbmRNaW5pS2l0RXZlbnQoe1xuICAgICAgY29tbWFuZDogXCJzZW5kLXRyYW5zYWN0aW9uXCIgLyogU2VuZFRyYW5zYWN0aW9uICovLFxuICAgICAgdmVyc2lvbjogMSxcbiAgICAgIHBheWxvYWRcbiAgICB9KTtcbiAgICByZXR1cm4gcGF5bG9hZDtcbiAgfSxcbiAgc2lnbk1lc3NhZ2U6IChwYXlsb2FkKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgfHwgIV9NaW5pS2l0LmlzQ29tbWFuZEF2YWlsYWJsZVtcInNpZ24tbWVzc2FnZVwiIC8qIFNpZ25NZXNzYWdlICovXSkge1xuICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgXCInc2lnbk1lc3NhZ2UnIGNvbW1hbmQgaXMgdW5hdmFpbGFibGUuIENoZWNrIE1pbmlLaXQuaW5zdGFsbCgpIG9yIHVwZGF0ZSB0aGUgYXBwIHZlcnNpb25cIlxuICAgICAgKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBzZW5kTWluaUtpdEV2ZW50KHtcbiAgICAgIGNvbW1hbmQ6IFwic2lnbi1tZXNzYWdlXCIgLyogU2lnbk1lc3NhZ2UgKi8sXG4gICAgICB2ZXJzaW9uOiAxLFxuICAgICAgcGF5bG9hZFxuICAgIH0pO1xuICAgIHJldHVybiBwYXlsb2FkO1xuICB9LFxuICBzaWduVHlwZWREYXRhOiAocGF5bG9hZCkgPT4ge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiIHx8ICFfTWluaUtpdC5pc0NvbW1hbmRBdmFpbGFibGVbXCJzaWduLXR5cGVkLWRhdGFcIiAvKiBTaWduVHlwZWREYXRhICovXSkge1xuICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgXCInc2lnblR5cGVkRGF0YScgY29tbWFuZCBpcyB1bmF2YWlsYWJsZS4gQ2hlY2sgTWluaUtpdC5pbnN0YWxsKCkgb3IgdXBkYXRlIHRoZSBhcHAgdmVyc2lvblwiXG4gICAgICApO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHNlbmRNaW5pS2l0RXZlbnQoe1xuICAgICAgY29tbWFuZDogXCJzaWduLXR5cGVkLWRhdGFcIiAvKiBTaWduVHlwZWREYXRhICovLFxuICAgICAgdmVyc2lvbjogMSxcbiAgICAgIHBheWxvYWRcbiAgICB9KTtcbiAgICByZXR1cm4gcGF5bG9hZDtcbiAgfSxcbiAgc2hhcmVDb250YWN0czogKHBheWxvYWQpID0+IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhX01pbmlLaXQuaXNDb21tYW5kQXZhaWxhYmxlW1wic2lnbi10eXBlZC1kYXRhXCIgLyogU2lnblR5cGVkRGF0YSAqL10pIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgIFwiJ3NoYXJlQ29udGFjdHMnIGNvbW1hbmQgaXMgdW5hdmFpbGFibGUuIENoZWNrIE1pbmlLaXQuaW5zdGFsbCgpIG9yIHVwZGF0ZSB0aGUgYXBwIHZlcnNpb25cIlxuICAgICAgKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBzZW5kTWluaUtpdEV2ZW50KHtcbiAgICAgIGNvbW1hbmQ6IFwic2hhcmUtY29udGFjdHNcIiAvKiBTaGFyZUNvbnRhY3RzICovLFxuICAgICAgdmVyc2lvbjogMSxcbiAgICAgIHBheWxvYWRcbiAgICB9KTtcbiAgICByZXR1cm4gcGF5bG9hZDtcbiAgfVxufTtcbi8qKlxuICogVGhpcyBvYmplY3QgY29udGFpbnMgYXN5bmMgdmVyc2lvbnMgb2YgYWxsIHRoZSBjb21tYW5kcy5cbiAqIEluc3RlYWQgb2YgdXNpbmcgZXZlbnQgbGlzdGVuZXJzLCB5b3UgY2FuIGp1c3QgYGF3YWl0YCB0aGVzZS5cbiAqXG4gKiBUaGV5IHJldHVybiBhIHN0YW5kYXJkaXplZCBvYmplY3RcbiAqXG4gKiBjb21tYW5kUGF5bG9hZCAtIG9iamVjdCByZXR1cm5lZCBieSB0aGUgY29tbWFuZCBmdW5jdGlvblxuICpcbiAqIGZpbmFsUGF5bG9hZCAtIG9iamVjdCByZXR1cm5lZCBieSB0aGUgZXZlbnQgbGlzdGVuZXIsIG9yIGluIG90aGVyIHdvcmRzLCBXb3JsZEFwcCByZXNwb25zZVxuICovXG5fTWluaUtpdC5jb21tYW5kc0FzeW5jID0ge1xuICB2ZXJpZnk6IGFzeW5jIChwYXlsb2FkKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgX01pbmlLaXQuYXdhaXRDb21tYW5kKFxuICAgICAgICAgIFwibWluaWFwcC12ZXJpZnktYWN0aW9uXCIgLyogTWluaUFwcFZlcmlmeUFjdGlvbiAqLyxcbiAgICAgICAgICBcInZlcmlmeVwiIC8qIFZlcmlmeSAqLyxcbiAgICAgICAgICAoKSA9PiBfTWluaUtpdC5jb21tYW5kcy52ZXJpZnkocGF5bG9hZClcbiAgICAgICAgKTtcbiAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgfVxuICAgIH0pO1xuICB9LFxuICBwYXk6IGFzeW5jIChwYXlsb2FkKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgX01pbmlLaXQuYXdhaXRDb21tYW5kKFxuICAgICAgICAgIFwibWluaWFwcC1wYXltZW50XCIgLyogTWluaUFwcFBheW1lbnQgKi8sXG4gICAgICAgICAgXCJwYXlcIiAvKiBQYXkgKi8sXG4gICAgICAgICAgKCkgPT4gX01pbmlLaXQuY29tbWFuZHMucGF5KHBheWxvYWQpXG4gICAgICAgICk7XG4gICAgICAgIHJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgd2FsbGV0QXV0aDogYXN5bmMgKHBheWxvYWQpID0+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBfTWluaUtpdC5hd2FpdENvbW1hbmQoXG4gICAgICAgICAgXCJtaW5pYXBwLXdhbGxldC1hdXRoXCIgLyogTWluaUFwcFdhbGxldEF1dGggKi8sXG4gICAgICAgICAgXCJ3YWxsZXQtYXV0aFwiIC8qIFdhbGxldEF1dGggKi8sXG4gICAgICAgICAgKCkgPT4gX01pbmlLaXQuY29tbWFuZHMud2FsbGV0QXV0aChwYXlsb2FkKVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgfVxuICAgIH0pO1xuICB9LFxuICBzZW5kVHJhbnNhY3Rpb246IGFzeW5jIChwYXlsb2FkKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgX01pbmlLaXQuYXdhaXRDb21tYW5kKFxuICAgICAgICAgIFwibWluaWFwcC1zZW5kLXRyYW5zYWN0aW9uXCIgLyogTWluaUFwcFNlbmRUcmFuc2FjdGlvbiAqLyxcbiAgICAgICAgICBcInNlbmQtdHJhbnNhY3Rpb25cIiAvKiBTZW5kVHJhbnNhY3Rpb24gKi8sXG4gICAgICAgICAgKCkgPT4gX01pbmlLaXQuY29tbWFuZHMuc2VuZFRyYW5zYWN0aW9uKHBheWxvYWQpXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG4gIHNpZ25NZXNzYWdlOiBhc3luYyAocGF5bG9hZCkgPT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShhc3luYyAocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IF9NaW5pS2l0LmF3YWl0Q29tbWFuZChcbiAgICAgICAgICBcIm1pbmlhcHAtc2lnbi1tZXNzYWdlXCIgLyogTWluaUFwcFNpZ25NZXNzYWdlICovLFxuICAgICAgICAgIFwic2lnbi1tZXNzYWdlXCIgLyogU2lnbk1lc3NhZ2UgKi8sXG4gICAgICAgICAgKCkgPT4gX01pbmlLaXQuY29tbWFuZHMuc2lnbk1lc3NhZ2UocGF5bG9hZClcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgc2lnblR5cGVkRGF0YTogYXN5bmMgKHBheWxvYWQpID0+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBfTWluaUtpdC5hd2FpdENvbW1hbmQoXG4gICAgICAgICAgXCJtaW5pYXBwLXNpZ24tdHlwZWQtZGF0YVwiIC8qIE1pbmlBcHBTaWduVHlwZWREYXRhICovLFxuICAgICAgICAgIFwic2lnbi10eXBlZC1kYXRhXCIgLyogU2lnblR5cGVkRGF0YSAqLyxcbiAgICAgICAgICAoKSA9PiBfTWluaUtpdC5jb21tYW5kcy5zaWduVHlwZWREYXRhKHBheWxvYWQpXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG4gIHNoYXJlQ29udGFjdHM6IGFzeW5jIChwYXlsb2FkKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgX01pbmlLaXQuYXdhaXRDb21tYW5kKFxuICAgICAgICAgIFwibWluaWFwcC1zaGFyZS1jb250YWN0c1wiIC8qIE1pbmlBcHBTaGFyZUNvbnRhY3RzICovLFxuICAgICAgICAgIFwic2hhcmUtY29udGFjdHNcIiAvKiBTaGFyZUNvbnRhY3RzICovLFxuICAgICAgICAgICgpID0+IF9NaW5pS2l0LmNvbW1hbmRzLnNoYXJlQ29udGFjdHMocGF5bG9hZClcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUocmVzcG9uc2UpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufTtcbnZhciBNaW5pS2l0ID0gX01pbmlLaXQ7XG5cbi8vIGluZGV4LnRzXG5pbXBvcnQgeyBWZXJpZmljYXRpb25MZXZlbCBhcyBWZXJpZmljYXRpb25MZXZlbDIgfSBmcm9tIFwiQHdvcmxkY29pbi9pZGtpdC1jb3JlXCI7XG5pbXBvcnQge1xuICB2ZXJpZnlDbG91ZFByb29mXG59IGZyb20gXCJAd29ybGRjb2luL2lka2l0LWNvcmUvYmFja2VuZFwiO1xuZXhwb3J0IHtcbiAgQ29tbWFuZCxcbiAgTWluaUtpdCxcbiAgTWluaUtpdEluc3RhbGxFcnJvckNvZGVzLFxuICBNaW5pS2l0SW5zdGFsbEVycm9yTWVzc2FnZSxcbiAgTmV0d29yayxcbiAgUGF5bWVudEVycm9yQ29kZXMsXG4gIFBheW1lbnRFcnJvck1lc3NhZ2UsXG4gIFBheW1lbnRWYWxpZGF0aW9uRXJyb3JzLFxuICBSZXNwb25zZUV2ZW50LFxuICBTQUZFX0NPTlRSQUNUX0FCSSxcbiAgU2VuZFRyYW5zYWN0aW9uRXJyb3JDb2RlcyxcbiAgU2VuZFRyYW5zYWN0aW9uRXJyb3JNZXNzYWdlLFxuICBTaGFyZUNvbnRhY3RzRXJyb3JDb2RlcyxcbiAgU2hhcmVDb250YWN0c0Vycm9yTWVzc2FnZSxcbiAgU2lnbk1lc3NhZ2VFcnJvckNvZGVzLFxuICBTaWduTWVzc2FnZUVycm9yTWVzc2FnZSxcbiAgU2lnblR5cGVkRGF0YUVycm9yQ29kZXMsXG4gIFNpZ25UeXBlZERhdGFFcnJvck1lc3NhZ2UsXG4gIFRva2VuRGVjaW1hbHMsXG4gIFRva2VucyxcbiAgQXBwRXJyb3JDb2RlczIgYXMgVmVyaWZpY2F0aW9uRXJyb3JDb2RlcyxcbiAgVmVyaWZpY2F0aW9uRXJyb3JNZXNzYWdlLFxuICBWZXJpZmljYXRpb25MZXZlbDIgYXMgVmVyaWZpY2F0aW9uTGV2ZWwsXG4gIFdhbGxldEF1dGhFcnJvckNvZGVzLFxuICBXYWxsZXRBdXRoRXJyb3JNZXNzYWdlLFxuICBwYXJzZVNpd2VNZXNzYWdlLFxuICB0b2tlblRvRGVjaW1hbHMsXG4gIHZlcmlmeUNsb3VkUHJvb2YsXG4gIHZlcmlmeVNpd2VNZXNzYWdlXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@worldcoin+minikit-js@1.3.0_@types+react@18.3.4_react@18.3.1_typescript@5.5.4_viem@2.20.0_typescript@5.5.4_/node_modules/@worldcoin/minikit-js/build/index.js\n");

/***/ })

};
;